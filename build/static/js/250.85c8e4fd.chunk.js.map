{"version":3,"file":"static/js/250.85c8e4fd.chunk.js","mappings":"wNAwOA,MArOA,SAA2BA,GAAmB,IAAjBC,EAAaD,EAAbC,cAEzBC,GAAgDC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAC5DI,GADuBF,EAAA,GAAqBA,EAAA,IACED,EAAAA,EAAAA,UAAS,KAAGI,GAAAF,EAAAA,EAAAA,GAAAC,EAAA,GAC1DE,GADsBD,EAAA,GAAoBA,EAAA,IACIJ,EAAAA,EAAAA,UAAS,KAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAC1DE,GADsBD,EAAA,GAAoBA,EAAA,IACMN,EAAAA,EAAAA,UAAS,KAAGQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAC5DE,GADuBD,EAAA,GAAqBA,EAAA,IACQR,EAAAA,EAAAA,UAAS,KAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAEhEE,GAFyBD,EAAA,GAAuBA,EAAA,IAENV,EAAAA,EAAAA,UAAS,KAAGY,GAAAV,EAAAA,EAAAA,GAAAS,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,IAEtCG,EAAAA,EAAAA,YAAU,WAAK,IAADC,EACV,GAAIlB,EAEJ,IAAkC,QAA/BkB,EAAAlB,EAAcmB,yBAAiB,IAAAD,OAAA,EAA/BA,EAAiCE,QAAS,IAAI,CAG7C,IADA,IAAIC,EAAuB,CAAC,EACnBC,EAAI,EAAGA,EAAItB,EAAcmB,kBAAkBC,OAAQE,IAAK,CAC7D,IAQmCC,EAAAC,EAAAC,EAAAC,EAO9BC,EAAAC,EAAAC,EAAAC,EAfDC,EAAQ/B,EAAcmB,kBAAkBG,GAExCU,EAAO,IAAIC,KAAKF,EAAM,gBACtBG,EAAQF,EAAKG,WAIbC,GAFJF,EAAQ,IAAID,KAAKD,EAAKK,cAAeH,EAAO,GAAGI,eAAe,UAAW,CAAEJ,MAAO,WAE1D,IADbF,EAAKK,cAEhB,GAAGhB,EAAqBe,GAEpBf,EAAqBe,GAAWG,QAAUR,EAAMQ,OAChDlB,EAAqBe,GAAWI,OAA0C,QAArCjB,EAAIvB,EAAcyC,iBAAiBnB,UAAE,IAAAC,OAAA,EAAjCA,EAAmCiB,MAC5EnB,EAAqBe,GAAWM,OAA0C,QAArClB,EAAIxB,EAAc2C,iBAAiBrB,UAAE,IAAAE,OAAA,EAAjCA,EAAmCkB,MAC5ErB,EAAqBe,GAAWQ,QAA4C,QAAtCnB,EAAIzB,EAAc6C,kBAAkBvB,UAAE,IAAAG,OAAA,EAAlCA,EAAoCmB,OAC9EvB,EAAqBe,GAAWU,UAAgD,QAAxCpB,EAAI1B,EAAc+C,oBAAoBzB,UAAE,IAAAI,OAAA,EAApCA,EAAsCoB,cAGlFzB,EAAqBe,GAAa,CAC9BG,OAAQR,EAAMQ,OACdC,MAAwC,QAAnCb,EAAE3B,EAAcyC,iBAAiBnB,UAAE,IAAAK,OAAA,EAAjCA,EAAmCa,MAC1CE,MAAwC,QAAnCd,EAAE5B,EAAc2C,iBAAiBrB,UAAE,IAAAM,OAAA,EAAjCA,EAAmCc,MAC1CE,OAA0C,QAApCf,EAAE7B,EAAc6C,kBAAkBvB,UAAE,IAAAO,OAAA,EAAlCA,EAAoCe,OAC5CE,SAA8C,QAAtChB,EAAE9B,EAAc+C,oBAAoBzB,UAAE,IAAAQ,OAAA,EAApCA,EAAsCgB,SAChD,cAAeV,EAG3B,CAEApB,EAAiBgC,OAAOC,OAAO5B,GAGnC,MACEL,EAAiBhB,EAAcmB,kBASrC,GAAE,CAACnB,IAEH,IAAAkD,GAAkChD,EAAAA,EAAAA,UAAS,MAAKiD,GAAA/C,EAAAA,EAAAA,GAAA8C,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GA6JhC,OA5JElC,EAAAA,EAAAA,YAAU,WACFF,GAEJsC,EAAc,CACVC,OAAQ,CAAC,CACLC,KAAM,SACNC,KAAmB,OAAbzC,QAAa,IAAbA,OAAa,EAAbA,EAAe0C,KAAI,SAAC1B,GAAK,OAAK2B,OAAO3B,EAAMQ,OAAO,KAIzD,CACCgB,KAAM,QACNC,KAAmB,OAAbzC,QAAa,IAAbA,OAAa,EAAbA,EAAe0C,KAAI,SAAC1B,GAAK,OAAK2B,OAAO3B,EAAMS,MAAM,KAExD,CACCe,KAAM,QACNC,KAAmB,OAAbzC,QAAa,IAAbA,OAAa,EAAbA,EAAe0C,KAAI,SAAC1B,GAAK,OAAK2B,OAAO3B,EAAMW,MAAM,KAG3D,CACIa,KAAM,WACNC,KAAmB,OAAbzC,QAAa,IAAbA,OAAa,EAAbA,EAAe0C,KAAI,SAAC1B,GAAK,OAAK2B,OAAO3B,EAAMe,SAAS,KAG9D,CACIS,KAAM,SACNC,KAAmB,OAAbzC,QAAa,IAAbA,OAAa,EAAbA,EAAe0C,KAAI,SAAC1B,GAAK,OAAK2B,OAAO3B,EAAMa,OAAO,MAI5De,QAAS,CACPC,MAAO,CACLC,OAAQ,IAERC,SAAS,EACTC,QAAS,CACPC,MAAM,IAGVC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,WACrDC,KAAM,CAEJC,SAAU,CAKR,GAIJC,WAAY,CACVC,SAAS,GAEXC,OAAQ,CACNC,MAAO,SACPC,MAAO,GAGTC,MAAO,CAELC,WAAyB,OAAb3D,QAAa,IAAbA,OAAa,EAAbA,EAAe0C,KAAI,SAAC1B,GAAK,OAClCA,EAAM,cAAc,IAGvB4C,OAAQ,CACNX,MAAM,IAGVY,MAAO,CACL,CACEC,UAAW,CACTb,MAAM,GAERc,WAAY,CACVd,MAAM,EACNe,MAAO,WAETJ,OAAQ,CACNK,MAAO,CACLf,OAAQ,YAGZgB,MAAO,CACLC,KAAM,kBACNF,MAAO,CACLD,MAAO,YAGXI,QAAS,CACPd,SAAS,IAGb,CACEe,WAAY,QACZC,UAAU,EACVR,UAAW,CACTb,MAAM,GAERc,WAAY,CACVd,MAAM,EACNe,MAAO,WAETJ,OAAQ,CACNK,MAAO,CACLf,OAAQ,YAGZgB,MAAO,CACLC,KAAM,QACNF,MAAO,CACLD,MAAO,aAIb,CACEK,WAAY,QACZpB,MAAM,GAIR,CACEoB,WAAY,QACZpB,MAAM,GAIR,CACEoB,WAAY,QACZpB,MAAM,GAIR,CACEoB,WAAY,QACZpB,MAAM,IAKVmB,QAAS,CAET,EACAG,OAAQ,CACNC,gBAAiB,OACjBC,QAAS,MAOrB,GAAE,CAACzE,KAKH0E,EAAAA,EAAAA,MAAA,OAAKC,GAAG,QAAQC,UAAU,6DAA6DX,MAAO,CAACR,MAAM,MAAOoB,SAAS,SAAUC,OAAO,OAAQC,YAAa,QAASC,SAAA,EACnJC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,0CAAyCI,SAAC,qBAEpEC,EAAAA,EAAAA,KAAA,OAAAD,SACE/F,GAAiBoD,IAAa4C,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CAACtC,QAAkB,OAATP,QAAS,IAATA,OAAS,EAATA,EAAWO,QAASL,OAAiB,OAATF,QAAS,IAATA,OAAS,EAATA,EAAWE,OAAQ4C,KAAK,OAAOrC,OAAQ,UAKrI,ECvBA,MA3MA,SAAqB9D,GAAqB,IAAlBC,EAAaD,EAAbC,cAEpBC,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CkG,EAAYhG,EAAA,GAAEiG,EAAejG,EAAA,IAEpCc,EAAAA,EAAAA,YAAU,WACN,GAAKjB,EAAL,CAEA,IAAIqG,EAAiC,OAAbrG,QAAa,IAAbA,OAAa,EAAbA,EAAesG,oBAEnCC,EAAyBvD,OAAOwD,KAAKH,GAAmB5C,KAAI,SAAUgD,GACtE,IAAIxB,EACJ,OAAQwB,GACJ,IAAK,gBACDxB,EAAQ,QACR,MACJ,IAAK,iBACDA,EAAQ,SACR,MACJ,IAAK,iBACDA,EAAQ,SACR,MACJ,IAAK,kBACDA,EAAQ,UACR,MACJ,IAAK,mBACDA,EAAQ,WAOhB,MAAO,CAAEwB,IAAKA,EAAKC,MAAOL,EAAkBI,GAAMxB,MAAOA,EAC7D,IAGAsB,EAAuBI,MAAK,SAAUC,EAAGC,GACrC,OAAOA,EAAEH,MAAQE,EAAEF,KACvB,IAGAN,EAAgBG,EApCU,CAqC9B,GAAG,CAACvG,IAGJ,IAAMoD,EAAY,CACdE,OAAQ,CAAC,CACLC,KAAM,uBACNC,KAAkB,OAAZ2C,QAAY,IAAZA,OAAY,EAAZA,EAAc1C,KAAI,SAACqD,GAAQ,IAAAC,EAAA,OAAoB,QAApBA,EAAMD,EAASJ,aAAK,IAAAK,OAAA,EAAdA,EAAgBC,QAAQ,EAAE,MAIrErD,QAAS,CACLC,MAAO,CACHqD,WAAY,UACZf,KAAM,MACNrC,OAAQ,IACRE,QAAS,CACLC,MAAM,IAGdkD,YAAa,CAETC,IAAK,CACDC,aAAc,EAEdC,YAAY,EACZC,aAAa,EACbC,UAAW,GACXnD,WAAY,CACRoD,SAAU,YAKtBpD,WAAY,CACRC,SAAS,EACToD,WAAY,QACZjC,QAAS,EACTkC,SAAU,EAEV1C,MAAO,CACH2C,SAAU,OACVC,WAAY,MACZC,MAAO,QAEXC,UAAW,SAAUC,GACjB,OAAOA,EAAM,GACjB,GAEJzC,OAAQ,CACJtB,MAAM,GAEVC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,WAErDQ,MAAO,CACHC,WAAwB,OAAZyB,QAAY,IAAZA,OAAY,EAAZA,EAAc1C,KAAI,SAACqD,GAAQ,OAAMA,EAAS7B,KAAK,IAE3DN,OAAQ,CACJmD,UAAW,SAAUC,GACjB,OAAOA,EAAM,GACjB,EACA/C,MAAO,CAEH2C,SAAU,OACVC,WAAY,MACZC,MAAO,SAGf/C,WAAY,CACRd,MAAM,IAGdY,MAAO,CACHD,OAAQ,CACJmD,UAAW,SAAUC,EAAKC,GACtB,OAAItE,OAAOuE,UAAUF,GAEVA,EAAM,MADIG,SAAe,IAANH,EAAY,IAAII,WACR,IAE3BJ,CAEf,EACA/C,MAAO,CAEH2C,SAAU,OACVC,WAAY,MACZ/B,OAAQ,IAEZ6B,QAAS,EACTlC,SAAU,GACVqC,MAAO,QAEXhC,OAAQ,IAEZuC,KAAM,CAEF3D,MAAO,CACH4D,MAAO,CACHrE,MAAM,IAGdY,MAAO,CACH0D,QAAS,CACLC,OAAQ,IAEZF,MAAO,CACHrE,MAAM,IAGdwE,gBAAiB,GAErBrD,QAAS,CACLH,MAAO,CACH2C,SAAU,QAEdc,EAAG,CACCX,UAAW,SAAUC,GACjB,OAAOA,EAAM,GACjB,MAUhB,OACItC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,+DAA+DX,MAAO,CAAER,MAAO,MAAOoB,SAAU,SAAUG,SAAA,EACrHC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,uCAAsCI,SAAC,kCAErDC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,oCAAmCI,UAsB9CC,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CAACtC,QAASP,EAAUO,QAASL,OAAQF,EAAUE,OAAQ4C,KAAK,MAAMrC,OAAQ,UAMzG,E,SC3BA,MA9KA,SAA8B9D,GAAqB,IAAlBC,EAAaD,EAAbC,cAE7BC,GAA0EC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjFyI,EAA6BvI,EAAA,GAAEwI,EAAgCxI,EAAA,GACtEE,GAA0CH,EAAAA,EAAAA,UAAS,IAAGI,GAAAF,EAAAA,EAAAA,GAAAC,EAAA,GAA/CuI,EAAatI,EAAA,GAAEuI,EAAgBvI,EAAA,IAItCW,EAAAA,EAAAA,YAAU,WACDjB,GAGmB2I,EAAH,GAAjBC,EAAqD5I,EAAc8I,0BACjC9I,EAAc8I,0BAA0BC,OAAOH,GAIzF,GAAG,CAAC5I,EAAe4I,IAGnBI,QAAQC,IAAI,CAAEP,8BAAAA,IAGd,IAAAnI,GAAkCL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzC6C,EAAS5C,EAAA,GAAE6C,EAAY7C,EAAA,IAG9BS,EAAAA,EAAAA,YAAU,WACN,GAAKyH,EAAL,CACA,IAAIQ,EAAe,EACnBR,EAA8BS,SAAQ,SAACC,EAAM9H,GACzC8H,EAAKD,SAAQ,SAACE,EAAKC,GACXD,EAAI9G,OAAS2G,IACbA,EAAeG,EAAI9G,OAE3B,GACJ,IAGAc,EAAa,CAETC,OAAQ,CACJ,CACIC,KAAM,SACNC,KAAmC,OAA7BkF,QAA6B,IAA7BA,OAA6B,EAA7BA,EAA+BjF,KAAI,SAAC2F,EAAM9H,GAAC,IAAAiI,EAAA,MAAM,CAAEC,EAAG,KAAOlI,EAAI,GAAImH,EAAU,QAATc,EAAEH,EAAK,UAAE,IAAAG,OAAA,EAAPA,EAAShH,OAAQ,KAGnG,CACIgB,KAAM,UACNC,KAAmC,OAA7BkF,QAA6B,IAA7BA,OAA6B,EAA7BA,EAA+BjF,KAAI,SAAC2F,EAAM9H,GAAC,IAAAmI,EAAA,MAAM,CAAED,EAAG,KAAOlI,EAAI,GAAImH,EAAU,QAATgB,EAAEL,EAAK,UAAE,IAAAK,OAAA,EAAPA,EAASlH,OAAQ,KAEnG,CACIgB,KAAM,YACNC,KAAmC,OAA7BkF,QAA6B,IAA7BA,OAA6B,EAA7BA,EAA+BjF,KAAI,SAAC2F,EAAM9H,GAAC,IAAAoI,EAAA,MAAM,CAAEF,EAAG,KAAOlI,EAAI,GAAImH,EAAU,QAATiB,EAAEN,EAAK,UAAE,IAAAM,OAAA,EAAPA,EAASnH,OAAQ,KAEnG,CACIgB,KAAM,WACNC,KAAmC,OAA7BkF,QAA6B,IAA7BA,OAA6B,EAA7BA,EAA+BjF,KAAI,SAAC2F,EAAM9H,GAAC,IAAAqI,EAAA,MAAM,CAAEH,EAAG,KAAOlI,EAAI,GAAImH,EAAU,QAATkB,EAAEP,EAAK,UAAE,IAAAO,OAAA,EAAPA,EAASpH,OAAQ,KAEnG,CACIgB,KAAM,SACNC,KAAmC,OAA7BkF,QAA6B,IAA7BA,OAA6B,EAA7BA,EAA+BjF,KAAI,SAAC2F,EAAM9H,GAAC,IAAAsI,EAAA,MAAM,CAAEJ,EAAG,KAAOlI,EAAI,GAAImH,EAAU,QAATmB,EAAER,EAAK,UAAE,IAAAQ,OAAA,EAAPA,EAASrH,OAAQ,KAEnG,CACIgB,KAAM,WACNC,KAAmC,OAA7BkF,QAA6B,IAA7BA,OAA6B,EAA7BA,EAA+BjF,KAAI,SAAC2F,EAAM9H,GAAC,IAAAuI,EAAA,MAAM,CAAEL,EAAG,KAAOlI,EAAI,GAAImH,EAAU,QAAToB,EAAET,EAAK,UAAE,IAAAS,OAAA,EAAPA,EAAStH,OAAQ,KAEnG,CACIgB,KAAM,SACNC,KAAmC,OAA7BkF,QAA6B,IAA7BA,OAA6B,EAA7BA,EAA+BjF,KAAI,SAAC2F,EAAM9H,GAAC,IAAAwI,EAAA,MAAM,CAAEN,EAAG,KAAOlI,EAAI,GAAImH,EAAU,QAATqB,EAAEV,EAAK,UAAE,IAAAU,OAAA,EAAPA,EAASvH,OAAQ,MAKvGoB,QAAS,CACLC,MAAO,CACHC,OAAQ,IACRqC,KAAM,WAEV9B,WAAY,CACRC,SAAS,GAEbJ,OAAQ,CAAC,WAITiD,YAAa,CACT6C,QAAS,CACLC,WAAY,CACRC,OAAQ,CACJ,CACIC,KAAM,EACNC,GAAI,EACJpF,MAAO,UACPxB,KAAM,QAEV,CACI2G,KAAM,GACNC,GAAK,GAAKjB,EAAe,IACzBnE,MAAO,UACPxB,KAAM,UAEV,CACI2G,KAAO,GAAKhB,EAAe,IAC3BiB,GAAK,GAAKjB,EAAe,IACzBnE,MAAO,UACPxB,KAAM,OAEV,CACI2G,KAAO,GAAKhB,EAAe,IAC3BiB,GAAK,GAAKjB,EAAe,IACzBnE,MAAO,UACPxB,KAAM,QAEV,CACI2G,KAAO,GAAKhB,EAAe,IAC3BiB,GAAIjB,EACJnE,MAAO,UACPxB,KAAM,iBA1FQ,CAoG9C,GAAG,CAACmF,EAA+BE,IAEnC,IAAMqB,EAAS,CACX,CAAE1G,KAAM,YAAamC,GAAI,EAAGkD,cAAe,GAC/C,CAAErF,KAAM,aAAcmC,GAAI,EAAGkD,cAAe,GAC5C,CAAErF,KAAM,gBAAiBmC,GAAI,EAAGkD,cAAe,IAC/C,CAAErF,KAAM,YAAamC,GAAI,EAAGkD,cAAe,IAC3C,CAAErF,KAAM,WAAYmC,GAAI,EAAGkD,cAAe,IAI1CnI,GAA0CP,EAAAA,EAAAA,UAAS,GAAEQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAA9C2J,EAAa1J,EAAA,GAAE2J,EAAgB3J,EAAA,GAQtC,OAII+E,EAAAA,EAAAA,MAAA,OAAKC,GAAG,QAASC,UAAU,yDAAyDX,MAAO,CAAER,MAAO,MAAOoB,SAAU,SAAUC,OAAQ,OAAQC,YAAa,QAASC,SAAA,EACjKC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,0CAAyCI,SAAC,oCACxDC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,+BAA8BI,UACzCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,wDAAwD2E,KAAK,QAAOvE,SAC9EkE,EAAOxG,KAAI,SAAC8G,EAAOjJ,GAAC,OACjB0E,EAAAA,EAAAA,KAAA,KACIwE,QAAS,kBAhBL,SAACD,GACzBF,EAAiBE,EAAM7E,IAEvBmD,EAAiB0B,EAAM3B,cAC3B,CAYuC6B,CAAoBF,EAAM,EACzC5E,WAAW+E,EAAAA,EAAAA,GAAU,GAALpJ,GAAU,aAAcA,GAAK2I,EAAO7I,QAAU,YAAa,mNAAoNgJ,GAAiBG,EAAM7E,IAAM,gBAAgBK,SAE3UwE,EAAMhH,MACP,SAOhByC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,OAAMI,SACf/F,GAAiBoD,IAAc4C,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CAACtC,QAAkB,OAATP,QAAS,IAATA,OAAS,EAATA,EAAWO,QAASL,OAAiB,OAATF,QAAS,IAATA,OAAS,EAATA,EAAWE,OAAQ4C,KAAK,UAAUrC,OAAQ,UAKhJ,ECnIA,MA3CA,SAAyB9D,GAAmB,IAAjBC,EAAaD,EAAbC,cAEvBC,GAAgDC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvD0K,EAAgBxK,EAAA,GAAEyK,EAAmBzK,EAAA,GAS9C,OAPEc,EAAAA,EAAAA,YAAU,WACFjB,GAEJ4K,EAAiC,OAAb5K,QAAa,IAAbA,OAAa,EAAbA,EAAe6K,cACvC,KAIApF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,mDAAmDX,MAAO,CAACR,MAAM,MAAOoB,SAAS,SAASG,SAAA,EACrGC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,uCAAsCI,SAAC,yBACpDC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,8CAA+CX,MAAO,CAAC8F,UAAU,SAAUC,UAAU,SAAWlH,OAAO,SAASkC,SAC3H4E,GAAqBA,EAAiBlH,KAAI,SAACuH,EAAS1J,GAAC,IAAA2J,EAAA,OAClDjF,EAAAA,EAAAA,KAAA,OAAAD,UAEAN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,8BAA4BI,SAAA,EACvCN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,iDAAgDI,SAAA,EAACN,EAAAA,EAAAA,MAAA,QAAMT,MAAO,CAACkG,YAAY,QAASvF,UAAU,wBAAuBI,SAAA,CAAEzE,EAAE,EAAE,OAAQ,KAAkB,QAAhB2J,EAACD,EAAQA,eAAO,IAAAC,OAAA,EAAfA,EAAiBE,UAAU,EAAE,QAClL1F,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oBAAmBI,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,uEAAuEX,MAAO,CAACoG,KAAK,MAAO5G,MAAM,QAAQuB,SAAEiF,EAAQK,SAClIrF,EAAAA,EAAAA,KAAA,OAAKL,UAAU,6CAA6CX,MAAO,CAAER,MAAO,SAAUuB,UAClFC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,+BAA+BX,MAAO,CAAER,MAAQwG,EAAQK,MAAMV,EAAiB,GAAGU,MAAM,IAAO,IAAKC,SAAS,mBAP9HhK,EAiBR,QAQlB,E,kBCqFA,MA7HA,SAAqBvB,GAAqB,IAafwL,EAbHvL,EAAaD,EAAbC,cAEpBC,GAA4CC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnDuL,EAAcrL,EAAA,GAAEsL,EAAiBtL,EAAA,GACxCE,GAA4BH,EAAAA,EAAAA,UAAS,MAAKI,GAAAF,EAAAA,EAAAA,GAAAC,EAAA,GAAnCqL,EAAMpL,EAAA,GAAEqL,EAASrL,EAAA,GA0BxB,OAzBAW,EAAAA,EAAAA,YAAU,WACDjB,IACLyL,EAAkBzL,EAAc4L,iBAChCD,EAAU3L,EAAc0L,QAC5B,KAsBI1F,EAAAA,EAAAA,KAAA,OAAKL,UAAU,iDAAiDX,MAAO,CAAER,MAAO,MAAOoB,SAAU,SAAUC,OAAQ,OAAQC,YAAY,QAASC,SAC3IyF,GAAkBE,IACfjG,EAAAA,EAAAA,MAAA,OAAKE,UAAU,iBAAgBI,SAAA,EAE3BN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oBAAmBI,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OACI6F,IAAKC,EAAAA,EAAOC,KAAO,uBAAsC,OAAdP,QAAc,IAAdA,OAAc,EAAdA,EAAgBQ,UAC3DC,IAAI,cACJjH,MAAO,CAAER,MAAO,QAASX,OAAQ,QAASqI,OAAQ,iBAClDvG,UAAU,iBACdF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,sCAAqCI,SAAA,EAChDN,EAAAA,EAAAA,MAAA,MAAIE,UAAU,yBAAwBI,SAAA,CAAC,IAAgB,OAAdyF,QAAc,IAAdA,OAAc,EAAdA,EAAgBQ,aACzDhG,EAAAA,EAAAA,KAAA,OAAKhB,MAAO,CAAER,MAAO,MAAO2H,aAAc,uBAAwBrG,YAAa,WAC/EL,EAAAA,EAAAA,MAAA,OAAKE,UAAU,kCAAiCI,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,OAAKhB,MAAO,CAAEY,SAAU,SAAUG,SAAiB,OAAdyF,QAAc,IAAdA,OAAc,EAAdA,EAAgBY,OACrDpG,EAAAA,EAAAA,KAAA,OAAKL,UAAU,kDAAiDI,SAAgB,OAAdyF,QAAc,IAAdA,OAAc,EAAdA,EAAgBa,wBAK9F5G,EAAAA,EAAAA,MAAA,OAAKE,UAAU,wBAAuBI,SAAA,EAClCN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,kDAAkDX,MAAO,CAAER,MAAO,QAAS8H,aAAc,OAAQzI,OAAQ,SAAUkC,SAAA,EAC9HN,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACIC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,wBAAuBX,MAAO,CAAED,MAAO,UAAW4C,SAAU,QAAS5B,SAAC,eAGnFC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,qCAAqCX,MAAO,CAAEuH,UAAW,QAASxG,UAC7EC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,2DAA2DX,MAAO,CAAE2C,SAAU,QAAS5B,SACjF,OAAdyF,QAAc,IAAdA,OAAc,EAAdA,EAAgBgB,kBAK7BxG,EAAAA,EAAAA,KAAA,OAAKL,UAAU,4EAA2EI,UACtFC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,wBAAuBI,UAChCC,EAAAA,EAAAA,KAACyG,EAAAA,IAAc,SAGvBzG,EAAAA,EAAAA,KAAA,OAAKL,UAAU,uDAAsDI,UACjEC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,uDAAsDI,UAC/DC,EAAAA,EAAAA,KAACyG,EAAAA,IAAc,CAACzH,MAAO,CAAE0H,UAAW,8BAKhDjH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,kDAAkDX,MAAO,CAAER,MAAO,QAAS8H,aAAc,OAAQzI,OAAQ,SAAUkC,SAAA,EAC9HN,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACIC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,wBAAuBX,MAAO,CAAED,MAAO,UAAW4C,SAAU,QAAS5B,SAAC,eAGnFC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,qCAAqCX,MAAO,CAAEuH,UAAW,QAASxG,UAC7EC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,2DAA2DX,MAAO,CAAE2C,SAAU,QAAS5B,UApE7GwF,EAqE0C,OAAdC,QAAc,IAAdA,OAAc,EAAdA,EAAgBmB,UApE3DpB,EAAS,IACFA,EAEPA,EAAS,KACDA,EAAS,KAAMvE,QAAQ,GAAK,IAEpCuE,EAAS,KACDA,EAAS,KAASvE,QAAQ,GAAK,IAEvCuE,EAAS,MACDA,EAAS,KAAYvE,QAAQ,GAAK,IAEvC,eA6DahB,EAAAA,EAAAA,KAAA,OAAKL,UAAU,4EAA2EI,UACtFC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,6CAGjBK,EAAAA,EAAAA,KAAA,OAAKL,UAAU,uDAAsDI,UACjEC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,+EAKrBF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,kDAAkDX,MAAO,CAAER,MAAO,QAAS8H,aAAc,OAAQzI,OAAQ,SAAUkC,SAAA,EAC9HN,EAAAA,EAAAA,MAAA,OAAAM,SAAA,EACIC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,wBAAuBX,MAAO,CAAED,MAAO,UAAW4C,SAAU,QAAS5B,SAAC,YAGnFC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,qCAAqCX,MAAO,CAAEuH,UAAW,QAASxG,UAC7EC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,2DAA2DX,MAAO,CAAE2C,SAAU,QAAS5B,SACzF,OAAN2F,QAAM,IAANA,OAAM,EAANA,EAAQkB,qBAKrB5G,EAAAA,EAAAA,KAAA,OAAKL,UAAU,yEAAwEI,UACnFC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,qBAAoBI,UAC7BC,EAAAA,EAAAA,KAAC6G,EAAAA,IAAkB,SAG3B7G,EAAAA,EAAAA,KAAA,OAAKL,UAAU,uDAAsDI,UAEjEC,EAAAA,EAAAA,KAAC6G,EAAAA,IAAkB,CAAClH,UAAU,qEAO9D,ECqBA,MAhJA,SAAwB5F,GAA4B,IAAD+M,EAAxB9M,EAAaD,EAAbC,cAAe+E,EAAKhF,EAALgF,MAClCgI,EAAgB,SAACxB,GACrB,OAAIA,EAAS,IACJA,EAELA,EAAS,KACHA,EAAS,KAAMvE,QAAQ,GAAK,IAElCuE,EAAS,KACHA,EAAS,KAASvE,QAAQ,GAAK,IAErCuE,EAAS,MACHA,EAAS,KAAYvE,QAAQ,GAAK,IAErC,KACT,EAGA/G,GAA8CC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArD+M,EAAe7M,EAAA,GAAE8M,EAAkB9M,EAAA,IAC1Cc,EAAAA,EAAAA,YAAU,WAAO,IAADiM,EACd,GAAKlN,EAAL,CACA,IAAIgN,EAAgC,OAAbhN,QAAa,IAAbA,OAAa,EAAbA,EAAeyC,iBAEtC,IAAmB,QAAfyK,EAAAF,SAAe,IAAAE,OAAA,EAAfA,EAAiB9L,QAAS,IAAK,CAEjC,IAAI+L,EAAyB,CAAC,EAC9BH,EAAgB7D,SAAQ,SAACiE,GAEvB,IAAIpL,EAAO,IAAIC,KAAKmL,EAAM,gBACtBlL,EAAQF,EAAKG,WAIbC,GAFJF,EAAQ,IAAID,KAAKD,EAAKK,cAAeH,EAAO,GAAGI,eAAe,UAAW,CAAEJ,MAAO,WAE1D,IADbF,EAAKK,cAEZ8K,EAAuB/K,GACzB+K,EAAuB/K,GAAWI,OAAS4K,EAAM5K,MAEjD2K,EAAuB/K,GAAa,CAClCI,MAAO4K,EAAM5K,MACb,cAAeJ,EAGrB,IAEA4K,EAAkBhK,OAAOC,OAAOkK,EAClC,CACAF,EAAmBD,EA1BO,CAkC5B,GAAG,CAAChN,IAEJ,IAAMoD,EAAY,CAEhBE,OAAQ,CAAC,CACPC,KAAM,QACNC,KAAqB,OAAfwJ,QAAe,IAAfA,OAAe,EAAfA,EAAiBvJ,KAAI,SAAC2J,GAAK,IAAAC,EAAA,OAAW,OAALD,QAAK,IAALA,GAAY,QAAPC,EAALD,EAAO5K,aAAK,IAAA6K,OAAP,EAALA,EAAcrG,QAAQ,EAAE,IAE/DjC,MAAOA,IAETpB,QAAS,CACPC,MAAO,CACLsC,KAAM,OACNrC,OAAQ,IACRyJ,KAAM,CACJjJ,SAAS,GAEXN,QAAS,CACPC,MAAM,IAIVI,WAAY,CACVC,SAAS,GAEXC,OAAQ,CACNC,MAAO,SACPC,MAAO,GAGTP,OAAQ,CAACc,EAAM,UAAU,CAAG,UAAW,UAAW,WAClDb,KAAM,CACJgC,KAAM,WACN/B,SAAU,CAERoJ,eAAgB,EAChBC,YAAa,GACbC,UAAW,GACXC,MAAO,CAAC,EAAG,GAAI,OAInB/I,OAAuB,OAAfqI,QAAe,IAAfA,OAAe,EAAfA,EAAiBvJ,KAAI,SAAC2J,GAAK,OAAW,OAALA,QAAK,IAALA,OAAK,EAALA,EAAQ,cAAc,IAC/D3I,MAAO,CAELE,OAAQ,CACNX,MAAM,IAGVY,MAAO,CACLS,UAAU,EACVV,OAAQ,CACNX,MAAM,EACN8D,UAAW,SAAUC,GACnB,OAAOgF,EAAchF,GAAO,SAC9B,IAGJK,KAAM,CAGJI,gBAAiB,EAEjB5D,MAAO,CACLyD,MAAO,CACLrE,MAAM,KAIZsB,OAAQ,CACNC,gBAAiB,UAOvB,OACEE,EAAAA,EAAAA,MAAA,OAAKE,UAAU,sDAAsDX,MAAO,CAAER,MAAO,MAAOoB,SAAU,QAAS/B,OAAO,cAAe8J,WAAY,aAAa5I,EAAO6I,oBAAqB,MAAOC,uBAAwB,OAAQ9H,SAAA,EAC/NN,EAAAA,EAAAA,MAAA,KAAGE,UAAU,gEAAgEX,MAAO,CAAE2C,SAAU,QAAS5B,SAAA,CACtGgH,EAA2B,OAAb/M,QAAa,IAAbA,GAAqB,QAAR8M,EAAb9M,EAAe0L,cAAM,IAAAoB,OAAR,EAAbA,EAAuBgB,aAAa,KAAC9H,EAAAA,EAAAA,KAAA,QAAMhB,MAAO,CAAED,MAAOA,GAAQgB,SAAC,oBAErFC,EAAAA,EAAAA,KAAA,OAAAD,SAEGiH,IAAmBhH,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CAACtC,QAAkB,OAATP,QAAS,IAATA,OAAS,EAATA,EAAWO,QAASL,OAAiB,OAATF,QAAS,IAATA,OAAS,EAATA,EAAWE,OAAQ4C,KAAK,OAAOrC,OAAQ,UAIxH,ECDA,MA7IA,SAAwB9D,GAA4B,IAAD+M,EAAxB9M,EAAaD,EAAbC,cAAe+E,EAAKhF,EAALgF,MAClCgI,EAAgB,SAACxB,GACrB,OAAIA,EAAS,IACJA,EAELA,EAAS,KACHA,EAAS,KAAMvE,QAAQ,GAAK,IAElCuE,EAAS,KACHA,EAAS,KAASvE,QAAQ,GAAK,IAErCuE,EAAS,MACHA,EAAS,KAAYvE,QAAQ,GAAK,IAErC,KACT,EAGA/G,GAA8CC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArD8N,EAAe5N,EAAA,GAAE6N,EAAkB7N,EAAA,IAC1Cc,EAAAA,EAAAA,YAAU,WAAO,IAADgN,EACd,GAAKjO,EAAL,CACA,IAAI+N,EAAgC,OAAb/N,QAAa,IAAbA,OAAa,EAAbA,EAAe2C,iBAEtC,IAAmB,QAAfsL,EAAAF,SAAe,IAAAE,OAAA,EAAfA,EAAiB7M,QAAS,IAAK,CAEjC,IAAI8M,EAAyB,CAAC,EAC9BH,EAAgB5E,SAAQ,SAACgF,GAEnB,IAAInM,EAAO,IAAIC,KAAKkM,EAAM,gBACtBjM,EAAQF,EAAKG,WAIbC,GAFJF,EAAQ,IAAID,KAAKD,EAAKK,cAAeH,EAAO,GAAGI,eAAe,UAAW,CAAEJ,MAAO,WAE1D,IADbF,EAAKK,cAEZ6L,EAAuB9L,GAC3B8L,EAAuB9L,GAAWM,OAASyL,EAAMzL,MAEjDwL,EAAuB9L,GAAa,CAChCM,MAAOyL,EAAMzL,MACb,cAAeN,EAGvB,IAGA2L,EAAkB/K,OAAOC,OAAOiL,EACpC,CACAF,EAAmBD,EA3BO,CA+B5B,GAAG,CAAC/N,IAEJ,IAAMoD,EAAY,CAEhBE,OAAQ,CAAC,CACPC,KAAM,QACNC,KAAqB,OAAfuK,QAAe,IAAfA,OAAe,EAAfA,EAAiBtK,KAAI,SAAC0K,GAAK,IAAAC,EAAA,OAAW,OAALD,QAAK,IAALA,GAAY,QAAPC,EAALD,EAAOzL,aAAK,IAAA0L,OAAP,EAALA,EAAcpH,QAAQ,EAAE,IAE/DjC,MAAOA,IAETpB,QAAS,CACPC,MAAO,CACLsC,KAAM,OACNrC,OAAQ,IACRyJ,KAAM,CACJjJ,SAAS,GAEXN,QAAS,CACPC,MAAM,IAIVI,WAAY,CACVC,SAAS,GAEXC,OAAQ,CACNC,MAAO,SACPC,MAAO,GAGTP,OAAQ,CAACc,GACTb,KAAM,CACJgC,KAAM,WACN/B,SAAU,CAERoJ,eAAgB,EAChBC,YAAa,GACbC,UAAW,GACXC,MAAO,CAAC,EAAG,GAAI,OAInB/I,OAAuB,OAAfoJ,QAAe,IAAfA,OAAe,EAAfA,EAAiBtK,KAAI,SAAC0K,GAAK,OAAW,OAALA,QAAK,IAALA,OAAK,EAALA,EAAQ,cAAc,IAC/D1J,MAAO,CAELE,OAAQ,CACNX,MAAM,IAGVY,MAAO,CACLS,UAAU,EACVV,OAAQ,CACNX,MAAM,EACN8D,UAAW,SAAUC,GACnB,OAAOgF,EAAchF,GAAO,SAC9B,IAGJK,KAAM,CAGJI,gBAAiB,EAEjB5D,MAAO,CACLyD,MAAO,CACLrE,MAAM,KAIZsB,OAAQ,CACNC,gBAAiB,UAOvB,OACEE,EAAAA,EAAAA,MAAA,OAAKE,UAAU,sDAAsDX,MAAO,CAAER,MAAO,MAAOoB,SAAU,QAAS/B,OAAO,cAAe8J,WAAY,aAAa5I,EAAO6I,oBAAqB,MAAOC,uBAAwB,OAAQ9H,SAAA,EAC/NN,EAAAA,EAAAA,MAAA,KAAGE,UAAU,gEAAgEX,MAAO,CAAE2C,SAAU,QAAS5B,SAAA,CACtGgH,EAA2B,OAAb/M,QAAa,IAAbA,GAAqB,QAAR8M,EAAb9M,EAAe0L,cAAM,IAAAoB,OAAR,EAAbA,EAAuBuB,aAAa,KAACrI,EAAAA,EAAAA,KAAA,QAAMhB,MAAO,CAAED,MAAOA,GAAQgB,SAAC,oBAErFC,EAAAA,EAAAA,KAAA,OAAAD,SAEGgI,IAAmB/H,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CAACtC,QAAkB,OAATP,QAAS,IAATA,OAAS,EAATA,EAAWO,QAASL,OAAiB,OAATF,QAAS,IAATA,OAAS,EAATA,EAAWE,OAAQ4C,KAAK,OAAOrC,OAAQ,UAIxH,ECEA,MA7IA,SAAwB9D,GAA4B,IAAD+M,EAAxB9M,EAAaD,EAAbC,cAAe+E,EAAKhF,EAALgF,MAClCgI,EAAgB,SAACxB,GACrB,OAAIA,EAAS,IACJA,EAELA,EAAS,KACHA,EAAS,KAAMvE,QAAQ,GAAK,IAElCuE,EAAS,KACHA,EAAS,KAASvE,QAAQ,GAAK,IAErCuE,EAAS,MACHA,EAAS,KAAYvE,QAAQ,GAAK,IAErC,KACT,EAGA/G,GAAgDC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvDqO,EAAgBnO,EAAA,GAAEoO,EAAmBpO,EAAA,IAC5Cc,EAAAA,EAAAA,YAAU,WAAO,IAADuN,EACd,GAAKxO,EAAL,CACA,IAAIsO,EAAiC,OAAbtO,QAAa,IAAbA,OAAa,EAAbA,EAAe6C,kBAEvC,IAAoB,QAAhB2L,EAAAF,SAAgB,IAAAE,OAAA,EAAhBA,EAAkBpN,QAAS,IAAK,CAElC,IAAIqN,EAA0B,CAAC,EAC/BH,EAAiBnF,SAAQ,SAACuF,GAEpB,IAAI1M,EAAO,IAAIC,KAAKyM,EAAO,gBACvBxM,EAAQF,EAAKG,WAIbC,GAFJF,EAAQ,IAAID,KAAKD,EAAKK,cAAeH,EAAO,GAAGI,eAAe,UAAW,CAAEJ,MAAO,WAE1D,IADbF,EAAKK,cAEZoM,EAAwBrM,GAC5BqM,EAAwBrM,GAAWQ,QAAU8L,EAAO9L,OAEpD6L,EAAwBrM,GAAa,CACjCQ,OAAQ8L,EAAO9L,OACf,cAAeR,EAGvB,IAGAkM,EAAmBtL,OAAOC,OAAOwL,EACrC,CACAF,EAAoBD,EA3BM,CA+B5B,GAAG,CAACtO,IAEJ,IAAMoD,EAAY,CAEhBE,OAAQ,CAAC,CACPC,KAAM,SACNC,KAAsB,OAAhB8K,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB7K,KAAI,SAACiL,GAAM,IAAAC,EAAA,OAAY,OAAND,QAAM,IAANA,GAAc,QAARC,EAAND,EAAQ9L,cAAM,IAAA+L,OAAR,EAANA,EAAgB3H,QAAQ,EAAE,IAEnEjC,MAAOA,IAETpB,QAAS,CACPC,MAAO,CACLsC,KAAM,OACNrC,OAAQ,IACRyJ,KAAM,CACJjJ,SAAS,GAEXN,QAAS,CACPC,MAAM,IAIVI,WAAY,CACVC,SAAS,GAEXC,OAAQ,CACNC,MAAO,SACPC,MAAO,GAGTP,OAAQ,CAACc,GACTb,KAAM,CACJgC,KAAM,WACN/B,SAAU,CAERoJ,eAAgB,EAChBC,YAAa,GACbC,UAAW,GACXC,MAAO,CAAC,EAAG,GAAI,OAInB/I,OAAwB,OAAhB2J,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB7K,KAAI,SAACiL,GAAM,OAAY,OAANA,QAAM,IAANA,OAAM,EAANA,EAAS,cAAc,IAClEjK,MAAO,CAELE,OAAQ,CACNX,MAAM,IAGVY,MAAO,CACLS,UAAU,EACVV,OAAQ,CACNX,MAAM,EACN8D,UAAW,SAAUC,GACnB,OAAOgF,EAAchF,GAAO,UAC9B,IAGJK,KAAM,CAGJI,gBAAiB,EAEjB5D,MAAO,CACLyD,MAAO,CACLrE,MAAM,KAIZsB,OAAQ,CACNC,gBAAiB,UAOvB,OACEE,EAAAA,EAAAA,MAAA,OAAKE,UAAU,sDAAsDX,MAAO,CAAER,MAAO,MAAOoB,SAAU,QAAQ/B,OAAO,cAAe8J,WAAY,aAAa5I,EAAO6I,oBAAqB,MAAOC,uBAAwB,OAAQ9H,SAAA,EAC9NN,EAAAA,EAAAA,MAAA,KAAGE,UAAU,gEAAgEX,MAAO,CAAE2C,SAAU,QAAS5B,SAAA,CACtGgH,EAA2B,OAAb/M,QAAa,IAAbA,GAAqB,QAAR8M,EAAb9M,EAAe0L,cAAM,IAAAoB,OAAR,EAAbA,EAAuB8B,cAAc,KAAC5I,EAAAA,EAAAA,KAAA,QAAMhB,MAAO,CAAED,MAAOA,GAAQgB,SAAC,qBAEtFC,EAAAA,EAAAA,KAAA,OAAAD,SAEGuI,IAAoBtI,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CAACtC,QAAkB,OAATP,QAAS,IAATA,OAAS,EAATA,EAAWO,QAASL,OAAiB,OAATF,QAAS,IAATA,OAAS,EAATA,EAAWE,OAAQ4C,KAAK,OAAOrC,OAAQ,UAIzH,ECEA,MA7IA,SAAwB9D,GAA4B,IAAD+M,EAAxB9M,EAAaD,EAAbC,cAAe+E,EAAKhF,EAALgF,MAClCgI,EAAgB,SAACxB,GACrB,OAAIA,EAAS,IACJA,EAELA,EAAS,KACHA,EAAS,KAAMvE,QAAQ,GAAK,IAElCuE,EAAS,KACHA,EAAS,KAASvE,QAAQ,GAAK,IAErCuE,EAAS,MACHA,EAAS,KAAYvE,QAAQ,GAAK,IAErC,KACT,EAGA/G,GAAoDC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3D4O,EAAkB1O,EAAA,GAAE2O,EAAqB3O,EAAA,IAChDc,EAAAA,EAAAA,YAAU,WAAO,IAAD8N,EACd,GAAK/O,EAAL,CACA,IAAI6O,EAAmC,OAAb7O,QAAa,IAAbA,OAAa,EAAbA,EAAe+C,oBAEzC,IAAsB,QAAlBgM,EAAAF,SAAkB,IAAAE,OAAA,EAAlBA,EAAoB3N,QAAS,IAAK,CAEpC,IAAI4N,EAA4B,CAAC,EACjCH,EAAmB1F,SAAQ,SAAC8F,GAEtB,IAAIjN,EAAO,IAAIC,KAAKgN,EAAS,gBACzB/M,EAAQF,EAAKG,WAIbC,GAFJF,EAAQ,IAAID,KAAKD,EAAKK,cAAeH,EAAO,GAAGI,eAAe,UAAW,CAAEJ,MAAO,WAE1D,IADbF,EAAKK,cAEZ2M,EAA0B5M,GAC9B4M,EAA0B5M,GAAWU,UAAYmM,EAASnM,SAE1DkM,EAA0B5M,GAAa,CACnCU,SAAUmM,EAASnM,SACnB,cAAeV,EAGvB,IAGAyM,EAAqB7L,OAAOC,OAAO+L,EACvC,CACAF,EAAsBD,EA3BI,CA+B5B,GAAG,CAAC7O,IAEJ,IAAMoD,EAAY,CAEhBE,OAAQ,CAAC,CACPC,KAAM,WACNC,KAAwB,OAAlBqL,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBpL,KAAI,SAACwL,GAAQ,IAAAC,EAAA,OAAc,OAARD,QAAQ,IAARA,GAAkB,QAAVC,EAARD,EAAUnM,gBAAQ,IAAAoM,OAAV,EAARA,EAAoBlI,QAAQ,EAAE,IAE3EjC,MAAOA,IAETpB,QAAS,CACPC,MAAO,CACLsC,KAAM,OACNrC,OAAQ,IACRyJ,KAAM,CACJjJ,SAAS,GAEXN,QAAS,CACPC,MAAM,IAIVI,WAAY,CACVC,SAAS,GAEXC,OAAQ,CACNC,MAAO,SACPC,MAAO,GAGTP,OAAQ,CAACc,GACTb,KAAM,CACJgC,KAAM,WACN/B,SAAU,CAERoJ,eAAgB,EAChBC,YAAa,GACbC,UAAW,GACXC,MAAO,CAAC,EAAG,GAAI,OAInB/I,OAA0B,OAAlBkK,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBpL,KAAI,SAACwL,GAAQ,OAAc,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAW,cAAc,IACxExK,MAAO,CAELE,OAAQ,CACNX,MAAM,IAGVY,MAAO,CACLS,UAAU,EACVV,OAAQ,CACNX,MAAM,EACN8D,UAAW,SAAUC,GACnB,OAAOgF,EAAchF,GAAO,YAC9B,IAGJK,KAAM,CAGJI,gBAAiB,EAEjB5D,MAAO,CACLyD,MAAO,CACLrE,MAAM,KAIZsB,OAAQ,CACNC,gBAAiB,UAOvB,OACEE,EAAAA,EAAAA,MAAA,OAAKE,UAAU,sDAAsDX,MAAO,CAAER,MAAO,MAAOoB,SAAU,QAAQ/B,OAAO,cAAe8J,WAAY,aAAa5I,EAAO6I,oBAAqB,MAAOC,uBAAwB,OAAQ9H,SAAA,EAC9NN,EAAAA,EAAAA,MAAA,KAAGE,UAAU,gEAAgEX,MAAO,CAAE2C,SAAU,QAAS5B,SAAA,CACtGgH,EAA2B,OAAb/M,QAAa,IAAbA,GAAqB,QAAR8M,EAAb9M,EAAe0L,cAAM,IAAAoB,OAAR,EAAbA,EAAuBqC,gBAAgB,KAACnJ,EAAAA,EAAAA,KAAA,QAAMhB,MAAO,CAAED,MAAOA,GAAQgB,SAAC,uBAExFC,EAAAA,EAAAA,KAAA,OAAAD,SAEG8I,IAAsB7I,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CAACtC,QAAkB,OAATP,QAAS,IAATA,OAAS,EAATA,EAAWO,QAASL,OAAiB,OAATF,QAAS,IAATA,OAAS,EAATA,EAAWE,OAAQ4C,KAAK,OAAOrC,OAAQ,UAI3H,E,SC0FA,MArOA,SAAqC9D,GAAqB,IAAlBC,EAAaD,EAAbC,cAgCpCC,GAA0CC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9C2I,EAAazI,EAAA,GAAE0I,EAAgB1I,EAAA,GACtCE,GAAsCH,EAAAA,EAAAA,UAAS,MAAKI,GAAAF,EAAAA,EAAAA,GAAAC,EAAA,GAA7C+O,EAAW9O,EAAA,GAAE+O,EAAc/O,EAAA,IAGlCW,EAAAA,EAAAA,YAAU,WACN,GAAKjB,EAAL,CAEA,IAIIsP,EAzCqB,SAAC5G,GAE1B,IAAI6G,EAAc,CACd,CAAEC,IAAK,SAAUC,sBAAuB,GACxC,CAAED,IAAK,UAAWC,sBAAuB,GACzC,CAAED,IAAK,YAAaC,sBAAuB,GAC3C,CAAED,IAAK,WAAYC,sBAAuB,GAC1C,CAAED,IAAK,SAAUC,sBAAuB,GACxC,CAAED,IAAK,WAAYC,sBAAuB,GAC1C,CAAED,IAAK,SAAUC,sBAAuB,IAe5C,OAXA/G,EAA8BS,SAAQ,SAACuG,GACnCA,EAAKvG,SAAQ,SAACE,EAAKC,GACfiG,EAAYjG,GAAGmG,uBAAyBpG,EAAI9G,MAChD,GACJ,IAGAgN,EAAYpG,SAAQ,SAACE,EAAK/H,GACtB+H,EAAIoG,sBAAwBpG,EAAIoG,sBAAwB/G,EAA8BtH,MAC1F,IAEOmO,CAEX,CAekBI,CAHO,GAAjB/G,EAAoD5I,EAAc8I,0BACjC9I,EAAc8I,0BAA0BC,OAAOH,IAGpFyG,EAAeC,EAPW,CAQ9B,GAAG,CAAC1G,EAAe5I,IAMnB,IAAAO,GAAkCL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzC6C,EAAS5C,EAAA,GAAE6C,EAAY7C,EAAA,GAC9BwI,QAAQC,IAAI,CAAEmG,YAAAA,KAEdnO,EAAAA,EAAAA,YAAU,WAAO,IAAD2O,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACZ,GAAgB,OAAXd,QAAW,IAAXA,GAAAA,EAAahO,OAAlB,CAEA,IAAI8H,EAAeiH,KAAKC,IAAGC,MAARF,MAAIG,EAAAA,EAAAA,GAAQlB,EAAY3L,KAAI,SAAA8M,GAAwB,OAAAA,EAArBd,qBAAiD,MAEnGpM,EAAa,CAETC,OAAQ,CACJ,CACIC,KAAM,SACNC,KAAM,CAAC,CACHgG,EAAG,eACHf,EAAc,OAAX2G,QAAW,IAAXA,GAAgB,QAALQ,EAAXR,EAAc,UAAE,IAAAQ,OAAL,EAAXA,EAAkBH,yBAI7B,CACIlM,KAAM,UACNC,KAAM,CAAC,CACHgG,EAAG,eACHf,EAAc,OAAX2G,QAAW,IAAXA,GAAgB,QAALS,EAAXT,EAAc,UAAE,IAAAS,OAAL,EAAXA,EAAkBJ,yBAG7B,CACIlM,KAAM,YACNC,KAAM,CAAC,CACHgG,EAAG,eACHf,EAAc,OAAX2G,QAAW,IAAXA,GAAgB,QAALU,EAAXV,EAAc,UAAE,IAAAU,OAAL,EAAXA,EAAkBL,yBAG7B,CACIlM,KAAM,WACNC,KAAM,CAAC,CACHgG,EAAG,eACHf,EAAc,OAAX2G,QAAW,IAAXA,GAAgB,QAALW,EAAXX,EAAc,UAAE,IAAAW,OAAL,EAAXA,EAAkBN,yBAG7B,CACIlM,KAAM,SACNC,KAAM,CAAC,CACHgG,EAAG,eACHf,EAAc,OAAX2G,QAAW,IAAXA,GAAgB,QAALY,EAAXZ,EAAc,UAAE,IAAAY,OAAL,EAAXA,EAAkBP,yBAG7B,CACIlM,KAAM,WACNC,KAAM,CAAC,CACHgG,EAAG,eACHf,EAAc,OAAX2G,QAAW,IAAXA,GAAgB,QAALa,EAAXb,EAAc,UAAE,IAAAa,OAAL,EAAXA,EAAkBR,yBAG7B,CACIlM,KAAM,SACNC,KAAM,CAAC,CACHgG,EAAG,eACHf,EAAc,OAAX2G,QAAW,IAAXA,GAAgB,QAALc,EAAXd,EAAc,UAAE,IAAAc,OAAL,EAAXA,EAAkBT,0BAQjC9L,QAAS,CACLC,MAAO,CACHC,OAAQ,IACRqC,KAAM,WAEV9B,WAAY,CACRC,SAAS,GAEbJ,OAAQ,CAAC,WACTQ,MAAO,CACHE,OAAQ,CACJX,MAAM,IAGdmB,QAAS,CAELsD,EAAG,CACCX,UAAW,SAAUC,GACjB,OAASA,GAAO,EAAKA,EAAS,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKf,QAAQ,KAAe,GAAPe,EAAY,SAAW,UAC3E,IAIRb,YAAa,CACT6C,QAAS,CACLC,WAAY,CACRC,OAAQ,CACJ,CACIC,KAAM,EACNC,GAAI,EACJpF,MAAO,UACPxB,KAAM,QAEV,CACI2G,KAAM,GACNC,GAAK,GAAKjB,EAAe,IACzBnE,MAAO,UACPxB,KAAM,UAEV,CACI2G,KAAO,GAAKhB,EAAe,IAC3BiB,GAAK,GAAKjB,EAAe,IACzBnE,MAAO,UACPxB,KAAM,OAEV,CACI2G,KAAO,GAAKhB,EAAe,IAC3BiB,GAAK,GAAKjB,EAAe,IACzBnE,MAAO,UACPxB,KAAM,QAEV,CACI2G,KAAO,GAAKhB,EAAe,IAC3BiB,GAAIjB,EACJnE,MAAO,UACPxB,KAAM,iBArHF,CA+HpC,GAAG,CAAC6L,EAAaxG,IAEjB,IAAMqB,EAAS,CACX,CAAE1G,KAAM,YAAamC,GAAI,EAAGkD,cAAe,GAC3C,CAAErF,KAAM,aAAcmC,GAAI,EAAGkD,cAAe,GAC5C,CAAErF,KAAM,gBAAiBmC,GAAI,EAAGkD,cAAe,IAC/C,CAAErF,KAAM,YAAamC,GAAI,EAAGkD,cAAe,IAC3C,CAAErF,KAAM,WAAYmC,GAAI,EAAGkD,cAAe,IAG9CnI,GAA0CP,EAAAA,EAAAA,UAAS,GAAEQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAA9C2J,EAAa1J,EAAA,GAAE2J,EAAgB3J,EAAA,GAStC,OAEI+E,EAAAA,EAAAA,MAAA,OAAKC,GAAG,QAAQC,UAAU,6DAA6DX,MAAO,CAAER,MAAO,MAAOoB,SAAU,SAAUC,OAAQ,OAAQC,YAAa,QAASC,SAAA,EACpKC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,0CAAyCI,SAAC,qCAExDC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,+BAA8BI,UACzCC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,wDAAwD2E,KAAK,QAAOvE,SAC9EkE,EAAOxG,KAAI,SAAC8G,EAAOjJ,GAAC,OACjB0E,EAAAA,EAAAA,KAAA,KACIwE,QAAS,kBAhBL,SAACD,GACzBF,EAAiBE,EAAM7E,IAEvBmD,EAAiB0B,EAAM3B,cAC3B,CAYuC6B,CAAoBF,EAAM,EACzC5E,WAAW+E,EAAAA,EAAAA,GAAU,GAALpJ,GAAU,aAAcA,GAAK2I,EAAO7I,QAAU,YAAa,mNAAoNgJ,GAAiBG,EAAM7E,IAAM,gBAAgBK,SAE3UwE,EAAMhH,MACP,SAOhByC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,OAAMI,SACf/F,GAAiBoD,IAAc4C,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CAACtC,QAAkB,OAATP,QAAS,IAATA,OAAS,EAATA,EAAWO,QAASL,OAAiB,OAATF,QAAS,IAATA,OAAS,EAATA,EAAWE,OAAQ4C,KAAK,UAAUrC,OAAQ,UAKhJ,ECtKA,MAnDA,WACI,IAAQ6B,GAAO8K,EAAAA,EAAAA,MAAP9K,GAERzF,GAA0CC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDD,EAAaG,EAAA,GAAEsQ,EAAgBtQ,EAAA,GAEhCuQ,EAAgB,eAAA3Q,GAAA4Q,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAvN,EAAA,OAAAoN,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMC,MAAM,GAADC,OAAIvF,EAAAA,EAAOC,KAAI,iBAAAsF,OAAgB3L,IAAK,OAAlD,OAARqL,EAAQE,EAAAK,KAAAL,EAAAE,KAAA,EACKJ,EAASQ,OAAM,OAA5B/N,EAAIyN,EAAAK,KACVb,EAAiBjN,GAAKyN,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,SAEtBjI,QAAQC,IAAIgI,EAAAO,GAAEC,SAAQ,yBAAAR,EAAAS,OAAA,GAAAZ,EAAA,mBAG7B,kBATqB,OAAA/Q,EAAAsQ,MAAA,KAAAsB,UAAA,KAqBtB,OAXA1Q,EAAAA,EAAAA,YAAU,WACDyE,GACLgL,GACJ,GAAG,CAAChL,IAEJsD,QAAQC,IAAI,CAAEjJ,cAAAA,KAOVgG,EAAAA,EAAAA,KAAA,OAAAD,UACIN,EAAAA,EAAAA,MAAA,OAAKE,UAAU,qBAAoBI,SAAA,EAC/BC,EAAAA,EAAAA,KAAC4L,EAAY,CAAC5R,cAAeA,KAC7ByF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,2CAA0CX,MAAO,CAAER,MAAO,MAAOoB,SAAU,UAAcG,SAAA,EACpGC,EAAAA,EAAAA,KAAC6L,EAAe,CAAC7R,cAAeA,EAAe+E,MAAO,aACtDiB,EAAAA,EAAAA,KAAC8L,EAAe,CAAC9R,cAAeA,EAAe+E,MAAO,aACtDiB,EAAAA,EAAAA,KAAC+L,EAAgB,CAAC/R,cAAeA,EAAe+E,MAAO,aACvDiB,EAAAA,EAAAA,KAACgM,EAAkB,CAAChS,cAAeA,EAAe+E,MAAO,gBAE7DiB,EAAAA,EAAAA,KAACiM,EAAkB,CAACjS,cAAeA,KACnCgG,EAAAA,EAAAA,KAACkM,EAAqB,CAAClS,cAAeA,KACtCgG,EAAAA,EAAAA,KAACmM,EAA4B,CAACnS,cAAeA,KAE7CyF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,iBAAiBX,MAAO,CAAER,MAAO,MAAOoB,SAAU,SAAUC,OAAQ,QAASE,SAAA,EAExFC,EAAAA,EAAAA,KAACoM,EAAgB,CAACpS,cAAeA,KACjCgG,EAAAA,EAAAA,KAACqM,EAAY,CAACrS,cAAeA,WAMjD,C","sources":["components/AccountGrowthChart.js","components/TopDurations.js","components/PostingFrequencyChart.js","components/MostUsedHashtags.js","components/UserOverview.js","components/TotalViewsChart.js","components/TotalLikesChart.js","components/TotalSharesChart.js","components/TotalCommentsChart.js","components/PostingFrequencyAverageChart.js","pages/StatsPage.js"],"sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nfunction AccountGrowthChart({analyticsData}) {\r\n\r\n    const [videosTimeSeries, setVideosTimeSeries] = useState([])\r\n    const [viewsTimeSeries, setViewsTimeSeries] = useState([])\r\n    const [likesTimeSeries, setLikesTimeSeries] = useState([])\r\n    const [sharesTimeSeries, setSharesTimeSeries] = useState([])\r\n    const [commentsTimeSeries, setCommentsTimeSeries] = useState([])\r\n\r\n    const [allTimeSeries, setAllTimeSeries] = useState([])\r\n\r\n    useEffect(()=>{\r\n        if(!analyticsData) return\r\n        //if video_timeseries length is bigger than 100, calculate the total views  for each month, instad hcing the data for each day\r\n        if(analyticsData.videos_timeseries?.length > 100){\r\n\r\n            var allTimeSeriesByMonth = {}\r\n            for (let i = 0; i < analyticsData.videos_timeseries.length; i++) {\r\n                var video = analyticsData.videos_timeseries[i]\r\n\r\n                var date = new Date(video['Date Posted'])\r\n                var month = date.getMonth()\r\n                //get month word\r\n                month = new Date(date.getFullYear(), month, 1).toLocaleString('default', { month: 'short' })\r\n                var year = date.getFullYear()\r\n                var monthYear = month + '-' + year\r\n                if(allTimeSeriesByMonth[monthYear]){\r\n\r\n                    allTimeSeriesByMonth[monthYear].Videos += video.Videos\r\n                    allTimeSeriesByMonth[monthYear].Views += analyticsData.views_timeseries[i]?.Views\r\n                    allTimeSeriesByMonth[monthYear].Likes += analyticsData.likes_timeseries[i]?.Likes\r\n                    allTimeSeriesByMonth[monthYear].Shares += analyticsData.shares_timeseries[i]?.Shares\r\n                    allTimeSeriesByMonth[monthYear].Comments += analyticsData.comments_timeseries[i]?.Comments\r\n                }else{\r\n\r\n                    allTimeSeriesByMonth[monthYear] = {\r\n                        Videos: video.Videos,\r\n                        Views: analyticsData.views_timeseries[i]?.Views,\r\n                        Likes: analyticsData.likes_timeseries[i]?.Likes,\r\n                        Shares: analyticsData.shares_timeseries[i]?.Shares,\r\n                        Comments: analyticsData.comments_timeseries[i]?.Comments,\r\n                        'Date Posted': monthYear\r\n                    }\r\n                }\r\n            }\r\n            \r\n            setAllTimeSeries(Object.values(allTimeSeriesByMonth))\r\n            \r\n            \r\n        }else{\r\n          setAllTimeSeries(analyticsData.videos_timeseries)\r\n        }\r\n\r\n\r\n        // setVideosTimeSeries(analyticsData.videos_timeseries)\r\n        // setViewsTimeSeries(analyticsData.views_timeseries)\r\n        // setLikesTimeSeries(analyticsData.likes_timeseries)\r\n        // setSharesTimeSeries(analyticsData.shares_timeseries)\r\n        // setCommentsTimeSeries(analyticsData.comments_timeseries)\r\n    },[analyticsData])\r\n//console.log({allTimeSeries})\r\n    const [chartData, setChartData] = useState(null)\r\n    useEffect(()=>{\r\n        if(!allTimeSeries) return\r\n\r\n        setChartData( {\r\n            series: [{\r\n                name: 'Videos',\r\n                data: allTimeSeries?.map((video) => Number(video.Videos)),\r\n              \r\n              //change color to blue \r\n\r\n            }, {\r\n                name: 'Views',\r\n                data: allTimeSeries?.map((video) => Number(video.Views)),\r\n              \r\n            }, {\r\n                name: 'Likes',\r\n                data: allTimeSeries?.map((video) => Number(video.Likes)),\r\n              \r\n            },\r\n            {\r\n                name: 'Comments',\r\n                data: allTimeSeries?.map((video) => Number(video.Comments)),\r\n              \r\n            },\r\n            {\r\n                name: 'Shares',\r\n                data: allTimeSeries?.map((video) => Number(video.Shares)),\r\n              \r\n            },\r\n        ],\r\n            options: {\r\n              chart: {\r\n                height: 350,\r\n                \r\n                stacked: false,\r\n                toolbar: {\r\n                  show: false\r\n                }\r\n              },\r\n              colors: ['#008FFB', '#F1416C', '#7239EA', '#50CD89', '#FFC700'],\r\n              fill: {\r\n              //  type: \"gradient\",\r\n                gradient: {\r\n        \r\n                  //shadeIntensity: 10,\r\n                  //opacityFrom: 0.9,\r\n                 // opacityTo: 0.8,\r\n                  //stops: [0, 90, 100]\r\n                }\r\n              },\r\n\r\n              dataLabels: {\r\n                enabled: false\r\n              },\r\n              stroke: {\r\n                curve: 'smooth',\r\n                width: 2,\r\n              },\r\n\r\n              xaxis: {\r\n                   // type: 'datetime',\r\n                categories: allTimeSeries?.map((video) =>\r\n                  (video['Date Posted'])\r\n                ),\r\n                //hide \r\n                labels: {\r\n                  show: false\r\n                }\r\n              },\r\n              yaxis: [\r\n                {\r\n                  axisTicks: {\r\n                    show: true,\r\n                  },\r\n                  axisBorder: {\r\n                    show: true,\r\n                    color: '#008FFB'\r\n                  },\r\n                  labels: {\r\n                    style: {\r\n                      colors: '#008FFB',\r\n                    }\r\n                  },\r\n                  title: {\r\n                    text: \"Videos Uploaded\",\r\n                    style: {\r\n                      color: '#008FFB',\r\n                    }\r\n                  },\r\n                  tooltip: {\r\n                    enabled: true\r\n                  }\r\n                },\r\n                {\r\n                  seriesName: 'Views',\r\n                  opposite: true,\r\n                  axisTicks: {\r\n                    show: true,\r\n                  },\r\n                  axisBorder: {\r\n                    show: true,\r\n                    color: '#F1416C'\r\n                  },\r\n                  labels: {\r\n                    style: {\r\n                      colors: '#F1416C',\r\n                    }\r\n                  },\r\n                  title: {\r\n                    text: \"Views\",\r\n                    style: {\r\n                      color: '#F1416C',\r\n                    }\r\n                  },\r\n                },\r\n                {\r\n                  seriesName: 'Views',\r\n                  show: false\r\n\r\n                \r\n                },\r\n                {\r\n                  seriesName: 'Views',\r\n                  show: false\r\n\r\n                \r\n                },\r\n                {\r\n                  seriesName: 'Views',\r\n                  show: false\r\n\r\n                \r\n                },\r\n                {\r\n                  seriesName: 'Views',\r\n                  show: false\r\n\r\n                \r\n                },\r\n              ],\r\n              tooltip: {\r\n               \r\n              },\r\n              legend: {\r\n                horizontalAlign: 'left',\r\n                offsetX: 40\r\n              }\r\n            },\r\n        }\r\n          \r\n          \r\n          )\r\n    },[allTimeSeries])\r\n\r\n    // console.log(videosTimeSeries?.map((video)=> video.Videos))\r\n    // console.log(viewsTimeSeries?.map((video)=> video.Views))\r\n  return (\r\n    <div id=\"chart\" className='block py-6 pb-0 rounded-xl shadow-sm bg-white mx-auto my-8' style={{width:'90%', maxWidth:'1700px', margin:'auto', marginBlock: '64px' }}>\r\n                     <h1 className='text-2xl font-medium text-slate-500 p-6'>Account Growth </h1>\r\n\r\n         <div>\r\n          {analyticsData && chartData && <ReactApexChart options={chartData?.options} series={chartData?.series} type=\"area\" height={350} />}\r\n          </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AccountGrowthChart","import React, { useState, useEffect } from 'react'\r\nimport ReactApexChart from 'react-apexcharts'\r\n\r\n\r\nfunction TopDurations({ analyticsData }) {\r\n\r\n    const [topDurations, setTopDurations] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (!analyticsData) return\r\n\r\n        var videoDurationData = analyticsData?.video_duration_data\r\n        //turn the object into an array of objects\r\n        var videoDurationDataArray = Object.keys(videoDurationData).map(function (key) {\r\n            var title;\r\n            switch (key) {\r\n                case 'duration_0_15':\r\n                    title = '0-15s'\r\n                    break;\r\n                case 'duration_15_30':\r\n                    title = '15-30s'\r\n                    break;\r\n                case 'duration_30_60':\r\n                    title = '30-60s'\r\n                    break;\r\n                case 'duration_60_180':\r\n                    title = '60-180s'\r\n                    break;\r\n                case 'duration_180_600':\r\n                    title = '180-600s'\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            return { key: key, value: videoDurationData[key], title: title };\r\n        });\r\n\r\n        //sort by value\r\n        videoDurationDataArray.sort(function (a, b) {\r\n            return b.value - a.value;\r\n        });\r\n\r\n\r\n        setTopDurations(videoDurationDataArray)\r\n    }, [analyticsData])\r\n\r\n\r\n    const chartData = {\r\n        series: [{\r\n            name: 'Percentage of videos',\r\n            data: topDurations?.map((duration) => (duration.value?.toFixed(0)))\r\n\r\n\r\n        }],\r\n        options: {\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'bar',\r\n                height: 350,\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n            },\r\n            plotOptions: {\r\n\r\n                bar: {\r\n                    borderRadius: 8,\r\n\r\n                    horizontal: true,\r\n                    distributed: true,\r\n                    barHeight: 50,\r\n                    dataLabels: {\r\n                        position: 'bottom' // use 'bottom' for left and 'top' for right align(textAnchor)\r\n                    }\r\n                }\r\n            },\r\n\r\n            dataLabels: {  // Docs: https://apexcharts.com/docs/options/datalabels/\r\n                enabled: true,\r\n                textAnchor: 'start',\r\n                offsetX: 0,\r\n                offsetY: -2,\r\n\r\n                style: {\r\n                    fontSize: '14px',\r\n                    fontWeight: '600',\r\n                    align: 'left',\r\n                },\r\n                formatter: function (val) {\r\n                    return val + '%';\r\n                }\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            colors: ['#3E97FF', '#F1416C', '#50CD89', '#FFC700', '#7239EA'],\r\n\r\n            xaxis: {\r\n                categories: topDurations?.map((duration) => (duration.title))\r\n                ,\r\n                labels: {\r\n                    formatter: function (val) {\r\n                        return val + \"%\"\r\n                    },\r\n                    style: {\r\n                        //colors: labelColor,\r\n                        fontSize: '14px',\r\n                        fontWeight: '600',\r\n                        align: 'left'\r\n                    }\r\n                },\r\n                axisBorder: {\r\n                    show: false\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    formatter: function (val, opt) {\r\n                        if (Number.isInteger(val)) {\r\n                            var percentage = parseInt(val * 100 / 18).toString();\r\n                            return val + ' - ' + percentage + '%';\r\n                        } else {\r\n                            return val;\r\n                        }\r\n                    },\r\n                    style: {\r\n                        // colors: labelColor,\r\n                        fontSize: '14px',\r\n                        fontWeight: '600',\r\n                        margin: 10\r\n                    },\r\n                    offsetY: 2,\r\n                    offsetX: -10,\r\n                    align: 'left'\r\n                },\r\n                margin: 10\r\n            },\r\n            grid: {\r\n                //  borderColor: borderColor,                \r\n                xaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    padding: {\r\n                        bottom: 20\r\n                    },\r\n                    lines: {\r\n                        show: false\r\n                    }\r\n                },\r\n                strokeDashArray: 4\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return val + '%';\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"block p-6 rounded-xl shadow-sm bg-white mx-auto my-8 xl:my-0\" style={{ width: '90%', maxWidth: '500px' }}>\r\n            <h1 className='text-2xl font-medium text-slate-500 '>Most Common Video Durations </h1>\r\n\r\n            <div className=\"block rounded-xl bg-white mx-auto\"  >\r\n                {/* {topDurations  && topDurations.map((duration)=>(\r\n                <div>\r\n                \r\n                <div className='flex justify-between my-4\t'>\r\n                    <div className='whitespace-nowrap font-semibold text-gray-900 '>{duration.title}s</div>\r\n                    <div className='flex items-center'>\r\n                        <div className='whitespace-nowrap mr-2  text-gray-500 '>{duration.value?.toFixed(0)} %</div>\r\n                        <div className=\" h-5 w-full bg-gray-100 dark:bg-neutral-600\" style={{ width: '200px' }}>\r\n                            <div className=\"h-5 bg-orange-500\" style={{ width: duration.value + '%' }} ></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n              \r\n\r\n\r\n\r\n            </div>\r\n            )) } */}\r\n\r\n                <ReactApexChart options={chartData.options} series={chartData.series} type=\"bar\" height={350} />\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopDurations","import React, { useState, useEffect } from 'react'\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport clsx from 'clsx';\r\n\r\nfunction PostingFrequencyChart({ analyticsData }) {\r\n\r\n    const [videosTimeseriesByWeekInRange, setVideosTimeseriesByWeekInRange] = useState(null)\r\n    const [numberOfWeeks, setNumberOfWeeks] = useState(52)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!analyticsData) return\r\n        var videosTimeseriesByWeekInRange;\r\n\r\n        if (numberOfWeeks == 0) setVideosTimeseriesByWeekInRange(analyticsData.videos_timeseries_by_week)\r\n        else setVideosTimeseriesByWeekInRange(analyticsData.videos_timeseries_by_week.slice(-numberOfWeeks))\r\n\r\n        \r\n\r\n    }, [analyticsData, numberOfWeeks])\r\n\r\n\r\n    console.log({ videosTimeseriesByWeekInRange })\r\n\r\n\r\n    const [chartData, setChartData] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        if (!videosTimeseriesByWeekInRange) return\r\n        var highestValue = 0\r\n        videosTimeseriesByWeekInRange.forEach((item, i) => {\r\n            item.forEach((day, j) => {\r\n                if (day.Videos > highestValue) {\r\n                    highestValue = day.Videos\r\n                }\r\n            })\r\n        })\r\n\r\n\r\n        setChartData({\r\n\r\n            series: [\r\n                {\r\n                    name: 'Monday',\r\n                    data: videosTimeseriesByWeekInRange?.map((item, i) => ({ x: 'w' + (i + 1), y: item[0]?.Videos }))\r\n\r\n                },\r\n                {\r\n                    name: 'Tuesday',\r\n                    data: videosTimeseriesByWeekInRange?.map((item, i) => ({ x: 'w' + (i + 1), y: item[1]?.Videos }))\r\n                },\r\n                {\r\n                    name: 'Wednesday',\r\n                    data: videosTimeseriesByWeekInRange?.map((item, i) => ({ x: 'w' + (i + 1), y: item[2]?.Videos }))\r\n                },\r\n                {\r\n                    name: 'Thursday',\r\n                    data: videosTimeseriesByWeekInRange?.map((item, i) => ({ x: 'w' + (i + 1), y: item[3]?.Videos }))\r\n                },\r\n                {\r\n                    name: 'Friday',\r\n                    data: videosTimeseriesByWeekInRange?.map((item, i) => ({ x: 'w' + (i + 1), y: item[4]?.Videos }))\r\n                },\r\n                {\r\n                    name: 'Saturday',\r\n                    data: videosTimeseriesByWeekInRange?.map((item, i) => ({ x: 'w' + (i + 1), y: item[5]?.Videos }))\r\n                },\r\n                {\r\n                    name: 'Sunday',\r\n                    data: videosTimeseriesByWeekInRange?.map((item, i) => ({ x: 'w' + (i + 1), y: item[6]?.Videos }))\r\n                },\r\n\r\n\r\n            ],\r\n            options: {\r\n                chart: {\r\n                    height: 350,\r\n                    type: 'heatmap',\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                colors: [\"#008FFB\"],\r\n               \r\n\r\n\r\n                plotOptions: {\r\n                    heatmap: {\r\n                        colorScale: {\r\n                            ranges: [\r\n                                {\r\n                                    from: 0,\r\n                                    to: 0,\r\n                                    color: '#d3dbf6',\r\n                                    name: 'None',\r\n                                },\r\n                                {\r\n                                    from: 0.1,\r\n                                    to: (40 * highestValue / 100),\r\n                                    color: '#67b7dc',\r\n                                    name: 'Lowest',\r\n                                },\r\n                                {\r\n                                    from: (40 * highestValue / 100),\r\n                                    to: (70 * highestValue / 100),\r\n                                    color: '#6771dc',\r\n                                    name: 'Low',\r\n                                },\r\n                                {\r\n                                    from: (70 * highestValue / 100),\r\n                                    to: (90 * highestValue / 100),\r\n                                    color: '#a367dc',\r\n                                    name: 'High',\r\n                                },\r\n                                {\r\n                                    from: (90 * highestValue / 100),\r\n                                    to: highestValue,\r\n                                    color: '#E620A0',\r\n                                    name: 'Highest',\r\n                                },\r\n\r\n                            ]\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        )\r\n    }, [videosTimeseriesByWeekInRange, numberOfWeeks])\r\n\r\n    const ranges = [\r\n        { name: 'Last Week', id: 0, numberOfWeeks: 1 },\r\n    { name: 'Last Month', id: 1, numberOfWeeks: 4 },\r\n    { name: 'Last 6 Months', id: 2, numberOfWeeks: 24 },\r\n    { name: 'Last Year', id: 3, numberOfWeeks: 52 },\r\n    { name: 'All Time', id: 5, numberOfWeeks: 0 }]\r\n\r\n\r\n\r\n    const [selectedRange, setSelectedRange] = useState(3)\r\n\r\n    const HandleChangingRange = (range) => {\r\n        setSelectedRange(range.id)\r\n\r\n        setNumberOfWeeks(range.numberOfWeeks)\r\n    }\r\n\r\n    return (\r\n\r\n\r\n\r\n        <div id=\"chart\"  className='block py-6 pb-0 rounded-xl shadow-sm bg-white mx-auto ' style={{ width: '90%', maxWidth: '1700px', margin: 'auto', marginBlock: '64px' }}>\r\n            <h1 className='text-2xl font-medium text-slate-500 p-6'>Videos Posted by Day of Week  </h1>\r\n            <div className=\"flex items-center px-6 mb-12\">\r\n                <div className=\"inline-flex shadow-md hover:shadow-lg focus:shadow-lg\" role=\"group\">\r\n                    {ranges.map((range, i) => (\r\n                        <a\r\n                            onClick={() => HandleChangingRange(range)}\r\n                            className={clsx(i == 0 && \"rounded-l \", i == ranges.length && \"rounded-r\", \" px-6 py-1 cursor-pointer bg-slate-500 text-white  text-xs leading-tight uppercase hover:bg-slate-600 focus:bg-slate-600 focus:outline-none focus:ring-0 active:bg-slate-700 transition duration-150 ease-in-out\", selectedRange == range.id && \"bg-slate-800\")}\r\n                        >\r\n                            {range.name}\r\n                        </a>\r\n                    ))}\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div className='px-8'>\r\n                {(analyticsData && chartData) && <ReactApexChart options={chartData?.options} series={chartData?.series} type=\"heatmap\" height={350} />}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostingFrequencyChart","import React, {useEffect, useState} from 'react'\r\n\r\nfunction MostUsedHashtags({analyticsData}) {\r\n\r\n    const [mostUsedHashtags, setMostUsedHashtags] = useState(null)\r\n\r\n    useEffect(()=>{\r\n        if(!analyticsData) return\r\n\r\n        setMostUsedHashtags(analyticsData?.hashtags_data)\r\n    })\r\n\r\n    //console.log({mostUsedHashtags})\r\n  return (\r\n    <div className='block p-6 rounded-xl shadow-sm bg-white mx-auto ' style={{width:'90%', maxWidth:'500px'}}>\r\n        <h1 className='text-2xl font-medium text-slate-500 '>Most Used Hashtags </h1>\r\n         <div className=\"block p-6 rounded-xl  bg-white mx-auto my-8\"  style={{overflowY:'scroll', overflowX:'hidden' , height:'250px'}} >\r\n            {mostUsedHashtags  && mostUsedHashtags.map((hashtag, i)=>(\r\n                <div key={i}>\r\n                \r\n                <div className='flex justify-between my-4\t'>\r\n                    <div className='whitespace-nowrap font-semibold text-gray-700 '><span style={{marginRight:'10px'}} className='text-gray-500 text-sm'>{i+1} </span> #{hashtag.hashtag?.substring(0,14)}</div>\r\n                    <div className='flex items-center'>\r\n                        <div className='whitespace-nowrap mr-2 text-xs font-semibold  text-white  relative  ' style={{left:'17%', width:'20px'}}>{hashtag.count}</div>\r\n                        <div className=\" h-7 w-full bg-gray-00 dark:bg-neutral-600\" style={{ width: '200px' }}>\r\n                            <div className=\"h-7 bg-orange-500 rounded-md\" style={{ width: (hashtag.count/mostUsedHashtags[0].count*100) + '%', minWidth:'30px' }} ></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n              \r\n\r\n\r\n\r\n            </div>\r\n            )) }\r\n\r\n\r\n\r\n        </div> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MostUsedHashtags","import React, { useEffect, useState } from 'react'\r\nimport { RiClapperboardFill } from 'react-icons/ri'\r\nimport { BsFillStarFill } from 'react-icons/bs'\r\nfunction UserOverview({ analyticsData }) {\r\n\r\n    const [profileDetails, setProfileDetails] = useState(null)\r\n    const [totals, setTotals] = useState(null)\r\n    useEffect(() => {\r\n        if (!analyticsData) return\r\n        setProfileDetails(analyticsData.profile_details)\r\n        setTotals(analyticsData.totals)\r\n    })\r\n\r\n    //console.log({ profileDetails })\r\n\r\n\r\n    const ShortenNumber = (number) => {\r\n        if (number < 1000) {\r\n            return number\r\n        }\r\n        if (number < 1000000) {\r\n            return (number / 1000).toFixed(1) + 'k'\r\n        }\r\n        if (number < 1000000000) {\r\n            return (number / 1000000).toFixed(1) + 'm'\r\n        }\r\n        if (number < 1000000000000) {\r\n            return (number / 1000000000).toFixed(1) + 'b'\r\n        }\r\n        return '1t+'\r\n    }\r\n\r\n    return (\r\n        <div className='block p-6 py-12 rounded-xl shadow-sm bg-white ' style={{ width: '90%', maxWidth: '1700px', margin: 'auto', marginBlock:'12px' }}>\r\n            {profileDetails && totals &&\r\n                <div className='flex flex-wrap' >\r\n\r\n                    <div className='flex align-center'>\r\n                        <img\r\n                            src={global.HOST + '/api/profile/photo/' + profileDetails?.username}\r\n                            alt=\"profile pic\"\r\n                            style={{ width: '120px', height: '120px', filter: 'brightness(1)' }}\r\n                            className='is-squircle' />\r\n                        <div className=' flex flex-col ml-10 justify-around'>\r\n                            <h2 className=' text-lg text-gray-800'>@{profileDetails?.username}</h2>\r\n                            <div style={{ width: '90%', borderBottom: '1px solid whitesmoke', marginBlock: '10px' }}></div>\r\n                            <div className='text-xs text-gray-600 font-thin'>\r\n                                <div style={{ maxWidth: '300px' }} >{profileDetails?.bio}</div>\r\n                                <div className='font-semibold text-gray-700 border-b mt-4 w-fit'>{profileDetails?.link_in_bio}</div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className='flex m-auto flex-wrap'>\r\n                        <div className=\"card flex-row justify-between p-4 mt-8 xl:mt-0 \" style={{ width: '170px', marginInline: '30px', height: '111px' }}>\r\n                            <div>\r\n                                <p className=\"text-xs+ uppercase \t\" style={{ color: '#64748b', fontSize: '12px' }}>\r\n                                    Followers\r\n                                </p>\r\n                                <div className=\"mt-8 flex items-baseline space-x-1\" style={{ marginTop: '10px' }}>\r\n                                    <p className=\"text-2xl font-semibold text-slate-700 dark:text-navy-100\" style={{ fontSize: '20px' }}>\r\n                                        {profileDetails?.followers}\r\n                                    </p>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mask is-squircle flex h-10 w-10 items-center justify-center bg-warning/10\">\r\n                                <i className=\" text-xl text-warning\">\r\n                                    <BsFillStarFill />\r\n                                </i>\r\n                            </div>\r\n                            <div className=\"absolute bottom-0 right-0 overflow-hidden rounded-lg\">\r\n                                <i className=\" translate-x-1/4 translate-y-1/4 text-5xl opacity-15\" >\r\n                                    <BsFillStarFill style={{ transform: 'translateY(10px)' }} />\r\n                                </i>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"card flex-row justify-between p-4 mt-8 xl:mt-0 \" style={{ width: '170px', marginInline: '30px', height: '111px' }}>\r\n                            <div>\r\n                                <p className=\"text-xs+ uppercase \t\" style={{ color: '#64748b', fontSize: '12px' }}>\r\n                                    Following\r\n                                </p>\r\n                                <div className=\"mt-8 flex items-baseline space-x-1\" style={{ marginTop: '10px' }}>\r\n                                    <p className=\"text-2xl font-semibold text-slate-700 dark:text-navy-100\" style={{ fontSize: '20px' }}>\r\n                                        {ShortenNumber(profileDetails?.following)}\r\n                                    </p>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mask is-squircle flex h-10 w-10 items-center justify-center bg-success/10\">\r\n                                <i className=\"fa-solid fa-user text-xl text-success\">\r\n                                </i>\r\n                            </div>\r\n                            <div className=\"absolute bottom-0 right-0 overflow-hidden rounded-lg\">\r\n                                <i className=\"fa-solid fa-user translate-x-1/4 translate-y-1/4 text-5xl opacity-15\">\r\n                                </i>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"card flex-row justify-between p-4 mt-8 xl:mt-0 \" style={{ width: '170px', marginInline: '30px', height: '111px' }}>\r\n                            <div>\r\n                                <p className=\"text-xs+ uppercase \t\" style={{ color: '#64748b', fontSize: '12px' }}>\r\n                                    Videos\r\n                                </p>\r\n                                <div className=\"mt-8 flex items-baseline space-x-1\" style={{ marginTop: '10px' }}>\r\n                                    <p className=\"text-2xl font-semibold text-slate-700 dark:text-navy-100\" style={{ fontSize: '20px' }}>\r\n                                        {totals?.total_videos}\r\n                                    </p>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mask is-squircle flex h-10 w-10 items-center justify-center bg-info/10\">\r\n                                <i className=\" text-xl text-info\">\r\n                                    <RiClapperboardFill />\r\n                                </i>\r\n                            </div>\r\n                            <div className=\"absolute bottom-0 right-0 overflow-hidden rounded-lg\">\r\n\r\n                                <RiClapperboardFill className=\" translate-x-1/4 translate-y-1/4 text-5xl opacity-15\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserOverview","import React, { useEffect, useState } from 'react'\r\nimport ReactApexChart from 'react-apexcharts'\r\n\r\nfunction TotalViewsChart({ analyticsData, color }) {\r\n  const ShortenNumber = (number) => {\r\n    if (number < 1000) {\r\n      return number\r\n    }\r\n    if (number < 1000000) {\r\n      return (number / 1000).toFixed(1) + 'k'\r\n    }\r\n    if (number < 1000000000) {\r\n      return (number / 1000000).toFixed(1) + 'm'\r\n    }\r\n    if (number < 1000000000000) {\r\n      return (number / 1000000000).toFixed(1) + 'b'\r\n    }\r\n    return '1t+'\r\n  }\r\n\r\n\r\n  const [viewsTimeSeries, setViewsTimeSeries] = useState(null)\r\n  useEffect(() => {\r\n    if (!analyticsData) return\r\n    var viewsTimeSeries = (analyticsData?.views_timeseries)\r\n    //if viewsTimeSeries length is bigger than 100, calculate the total views  for each month, instad hcing the data for each day \r\n    if (viewsTimeSeries?.length > 100) {\r\n\r\n      var viewsTimeSeriesByMonth = {}\r\n      viewsTimeSeries.forEach((views) => {\r\n\r\n        var date = new Date(views['Date Posted'])\r\n        var month = date.getMonth()\r\n        //get month word \r\n        month = new Date(date.getFullYear(), month, 1).toLocaleString('default', { month: 'short' })\r\n        var year = date.getFullYear()\r\n        var monthYear = month + '-' + year\r\n        if (viewsTimeSeriesByMonth[monthYear]) {\r\n          viewsTimeSeriesByMonth[monthYear].Views += views.Views\r\n        } else {\r\n          viewsTimeSeriesByMonth[monthYear] = {\r\n            Views: views.Views,\r\n            'Date Posted': monthYear\r\n          }\r\n        }\r\n      }\r\n      )\r\n      viewsTimeSeries = Object.values(viewsTimeSeriesByMonth)\r\n    }\r\n    setViewsTimeSeries(viewsTimeSeries)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }, [analyticsData])\r\n  //console.log({ viewsTimeSeries })\r\n  const chartData = {\r\n\r\n    series: [{\r\n      name: \"Views\",\r\n      data: viewsTimeSeries?.map((views) => (views?.Views?.toFixed(0))),\r\n      //color \r\n      color: color\r\n    }],\r\n    options: {\r\n      chart: {\r\n        type: 'area',\r\n        height: 350,\r\n        zoom: {\r\n          enabled: true\r\n        },\r\n        toolbar: {\r\n          show: false\r\n        }\r\n\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        curve: 'smooth',\r\n        width: 3,\r\n        //change color \r\n      },\r\n      colors: [color,'#F1416C', , '#50CD89', '#FFC700', '#7239EA'],\r\n      fill: {\r\n        type: \"gradient\",\r\n        gradient: {\r\n\r\n          shadeIntensity: 1,\r\n          opacityFrom: 0.9,\r\n          opacityTo: 0.4,\r\n          stops: [0, 80, 100]\r\n        }\r\n      },\r\n\r\n      labels: viewsTimeSeries?.map((views) => (views?.['Date Posted'])),\r\n      xaxis: {\r\n        //   type: 'datetime',\r\n        labels: {\r\n          show: false,\r\n        },\r\n      },\r\n      yaxis: {\r\n        opposite: true,\r\n        labels: {\r\n          show: false,\r\n          formatter: function (val) {\r\n            return ShortenNumber(val) + ' Views ';\r\n          }\r\n        },\r\n      },\r\n      grid: {\r\n        //  borderColor: borderColor,                \r\n\r\n        strokeDashArray: 4,\r\n        //hide horizontal grid lines\r\n        yaxis: {\r\n          lines: {\r\n            show: false\r\n          }\r\n        },\r\n      },\r\n      legend: {\r\n        horizontalAlign: 'left'\r\n      }\r\n    },\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"block py-6 pb-0 rounded-xl shadow-sm bg-white  my-8\" style={{ width: '90%', maxWidth: '300px', height:'fit-content', borderLeft: 'solid 4px '+color, borderTopLeftRadius: '0px', borderBottomLeftRadius: '0px' }}>\r\n      <p className=\"text-3xl font-semibold text-slate-700 dark:text-navy-100 pl-6\" style={{ fontSize: '22px' }}>\r\n        {ShortenNumber(analyticsData?.totals?.total_views)} <span style={{ color: color }}>Total Views</span>\r\n      </p>\r\n      <div>\r\n\r\n        {viewsTimeSeries && <ReactApexChart options={chartData?.options} series={chartData?.series} type=\"area\" height={200} />}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TotalViewsChart","import React, { useEffect, useState } from 'react'\r\nimport ReactApexChart from 'react-apexcharts'\r\n\r\nfunction TotalLikesChart({ analyticsData, color }) {\r\n  const ShortenNumber = (number) => {\r\n    if (number < 1000) {\r\n      return number\r\n    }\r\n    if (number < 1000000) {\r\n      return (number / 1000).toFixed(1) + 'k'\r\n    }\r\n    if (number < 1000000000) {\r\n      return (number / 1000000).toFixed(1) + 'm'\r\n    }\r\n    if (number < 1000000000000) {\r\n      return (number / 1000000000).toFixed(1) + 'b'\r\n    }\r\n    return '1t+'\r\n  }\r\n\r\n\r\n  const [likesTimeSeries, setLikesTimeSeries] = useState(null)\r\n  useEffect(() => {\r\n    if (!analyticsData) return\r\n    var likesTimeSeries = (analyticsData?.likes_timeseries)\r\n    //if likesTimeSeries length is bigger than 100, calculate the total views  for each month, instad hcing the data for each day \r\n    if (likesTimeSeries?.length > 100) {\r\n\r\n      var likesTimeSeriesByMonth = {}\r\n      likesTimeSeries.forEach((likes) => {\r\n            \r\n            var date = new Date(likes['Date Posted'])\r\n            var month = date.getMonth()\r\n            //get month word \r\n            month = new Date(date.getFullYear(), month, 1).toLocaleString('default', { month: 'short' })\r\n            var year = date.getFullYear()\r\n            var monthYear = month + '-' + year\r\n            if (likesTimeSeriesByMonth[monthYear]) {\r\n            likesTimeSeriesByMonth[monthYear].Likes += likes.Likes\r\n            } else {\r\n            likesTimeSeriesByMonth[monthYear] = {\r\n                Likes: likes.Likes,\r\n                'Date Posted': monthYear\r\n            }\r\n            }\r\n        }   \r\n        )\r\n\r\n        likesTimeSeries = Object.values(likesTimeSeriesByMonth)\r\n    }\r\n    setLikesTimeSeries(likesTimeSeries)\r\n\r\n\r\n\r\n  }, [analyticsData])\r\n  //console.log({ likesTimeSeries })\r\n  const chartData = {\r\n\r\n    series: [{\r\n      name: \"Likes\",\r\n      data: likesTimeSeries?.map((likes) => (likes?.Likes?.toFixed(0))),\r\n      //color \r\n      color: color\r\n    }],\r\n    options: {\r\n      chart: {\r\n        type: 'area',\r\n        height: 350,\r\n        zoom: {\r\n          enabled: true\r\n        },\r\n        toolbar: {\r\n          show: false\r\n        }\r\n\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        curve: 'smooth',\r\n        width: 3,\r\n        //change color \r\n      },\r\n      colors: [color],\r\n      fill: {\r\n        type: \"gradient\",\r\n        gradient: {\r\n\r\n          shadeIntensity: 1,\r\n          opacityFrom: 0.9,\r\n          opacityTo: 0.4,\r\n          stops: [0, 80, 100]\r\n        }\r\n      },\r\n\r\n      labels: likesTimeSeries?.map((likes) => (likes?.['Date Posted'])),\r\n      xaxis: {\r\n        //   type: 'datetime',\r\n        labels: {\r\n          show: false,\r\n        },\r\n      },\r\n      yaxis: {\r\n        opposite: true,\r\n        labels: {\r\n          show: false,\r\n          formatter: function (val) {\r\n            return ShortenNumber(val) + ' Likes ';\r\n          }\r\n        },\r\n      },\r\n      grid: {\r\n        //  borderColor: borderColor,                \r\n\r\n        strokeDashArray: 4,\r\n        //hide horizontal grid lines\r\n        yaxis: {\r\n          lines: {\r\n            show: false\r\n          }\r\n        },\r\n      },\r\n      legend: {\r\n        horizontalAlign: 'left'\r\n      }\r\n    },\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"block py-6 pb-0 rounded-xl shadow-sm bg-white  my-8\" style={{ width: '90%', maxWidth: '300px', height:'fit-content', borderLeft: 'solid 4px '+color, borderTopLeftRadius: '0px', borderBottomLeftRadius: '0px' }}>\r\n      <p className=\"text-3xl font-semibold text-slate-700 dark:text-navy-100 pl-6\" style={{ fontSize: '22px' }}>\r\n        {ShortenNumber(analyticsData?.totals?.total_likes)} <span style={{ color: color }}>Total Likes</span>\r\n      </p>\r\n      <div>\r\n\r\n        {likesTimeSeries && <ReactApexChart options={chartData?.options} series={chartData?.series} type=\"area\" height={200} />}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TotalLikesChart","import React, { useEffect, useState } from 'react'\r\nimport ReactApexChart from 'react-apexcharts'\r\n\r\nfunction TotalLikesChart({ analyticsData, color }) {\r\n  const ShortenNumber = (number) => {\r\n    if (number < 1000) {\r\n      return number\r\n    }\r\n    if (number < 1000000) {\r\n      return (number / 1000).toFixed(1) + 'k'\r\n    }\r\n    if (number < 1000000000) {\r\n      return (number / 1000000).toFixed(1) + 'm'\r\n    }\r\n    if (number < 1000000000000) {\r\n      return (number / 1000000000).toFixed(1) + 'b'\r\n    }\r\n    return '1t+'\r\n  }\r\n\r\n\r\n  const [sharesTimeSeries, setSharesTimeSeries] = useState(null)\r\n  useEffect(() => {\r\n    if (!analyticsData) return\r\n    var sharesTimeSeries = (analyticsData?.shares_timeseries)\r\n    //if sharesTimeSeries length is bigger than 100, calculate the total views  for each month, instad hcing the data for each day \r\n    if (sharesTimeSeries?.length > 100) {\r\n\r\n      var sharesTimeSeriesByMonth = {}\r\n      sharesTimeSeries.forEach((shares) => {\r\n            \r\n            var date = new Date(shares['Date Posted'])\r\n            var month = date.getMonth()\r\n            //get month word \r\n            month = new Date(date.getFullYear(), month, 1).toLocaleString('default', { month: 'short' })\r\n            var year = date.getFullYear()\r\n            var monthYear = month + '-' + year\r\n            if (sharesTimeSeriesByMonth[monthYear]) {\r\n            sharesTimeSeriesByMonth[monthYear].Shares += shares.Shares\r\n            } else {\r\n            sharesTimeSeriesByMonth[monthYear] = {\r\n                Shares: shares.Shares,\r\n                'Date Posted': monthYear\r\n            }\r\n            }\r\n        }   \r\n        )\r\n\r\n        sharesTimeSeries = Object.values(sharesTimeSeriesByMonth)\r\n    }\r\n    setSharesTimeSeries(sharesTimeSeries)\r\n\r\n\r\n\r\n  }, [analyticsData])\r\n  //console.log({ sharesTimeSeries })\r\n  const chartData = {\r\n\r\n    series: [{\r\n      name: \"Shares\",\r\n      data: sharesTimeSeries?.map((shares) => (shares?.Shares?.toFixed(0))),\r\n      //color \r\n      color: color\r\n    }],\r\n    options: {\r\n      chart: {\r\n        type: 'area',\r\n        height: 350,\r\n        zoom: {\r\n          enabled: true\r\n        },\r\n        toolbar: {\r\n          show: false\r\n        }\r\n\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        curve: 'smooth',\r\n        width: 3,\r\n        //change color \r\n      },\r\n      colors: [color],\r\n      fill: {\r\n        type: \"gradient\",\r\n        gradient: {\r\n\r\n          shadeIntensity: 1,\r\n          opacityFrom: 0.9,\r\n          opacityTo: 0.4,\r\n          stops: [0, 80, 100]\r\n        }\r\n      },\r\n\r\n      labels: sharesTimeSeries?.map((shares) => (shares?.['Date Posted'])),\r\n      xaxis: {\r\n        //   type: 'datetime',\r\n        labels: {\r\n          show: false,\r\n        },\r\n      },\r\n      yaxis: {\r\n        opposite: true,\r\n        labels: {\r\n          show: false,\r\n          formatter: function (val) {\r\n            return ShortenNumber(val) + ' Shares ';\r\n          }\r\n        },\r\n      },\r\n      grid: {\r\n        //  borderColor: borderColor,                \r\n\r\n        strokeDashArray: 4,\r\n        //hide horizontal grid lines\r\n        yaxis: {\r\n          lines: {\r\n            show: false\r\n          }\r\n        },\r\n      },\r\n      legend: {\r\n        horizontalAlign: 'left'\r\n      }\r\n    },\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"block py-6 pb-0 rounded-xl shadow-sm bg-white  my-8\" style={{ width: '90%', maxWidth: '300px',height:'fit-content', borderLeft: 'solid 4px '+color, borderTopLeftRadius: '0px', borderBottomLeftRadius: '0px' }}>\r\n      <p className=\"text-3xl font-semibold text-slate-700 dark:text-navy-100 pl-6\" style={{ fontSize: '22px' }}>\r\n        {ShortenNumber(analyticsData?.totals?.total_shares)} <span style={{ color: color }}>Total Shares</span>\r\n      </p>\r\n      <div>\r\n\r\n        {sharesTimeSeries && <ReactApexChart options={chartData?.options} series={chartData?.series} type=\"area\" height={200} />}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TotalLikesChart","import React, { useEffect, useState } from 'react'\r\nimport ReactApexChart from 'react-apexcharts'\r\n\r\nfunction TotalLikesChart({ analyticsData, color }) {\r\n  const ShortenNumber = (number) => {\r\n    if (number < 1000) {\r\n      return number\r\n    }\r\n    if (number < 1000000) {\r\n      return (number / 1000).toFixed(1) + 'k'\r\n    }\r\n    if (number < 1000000000) {\r\n      return (number / 1000000).toFixed(1) + 'm'\r\n    }\r\n    if (number < 1000000000000) {\r\n      return (number / 1000000000).toFixed(1) + 'b'\r\n    }\r\n    return '1t+'\r\n  }\r\n\r\n\r\n  const [commentsTimeSeries, setCommentsTimeSeries] = useState(null)\r\n  useEffect(() => {\r\n    if (!analyticsData) return\r\n    var commentsTimeSeries = (analyticsData?.comments_timeseries)\r\n    //if commentsTimeSeries length is bigger than 100, calculate the total views  for each month, instad hcing the data for each day \r\n    if (commentsTimeSeries?.length > 100) {\r\n\r\n      var commentsTimeSeriesByMonth = {}\r\n      commentsTimeSeries.forEach((comments) => {\r\n            \r\n            var date = new Date(comments['Date Posted'])\r\n            var month = date.getMonth()\r\n            //get month word \r\n            month = new Date(date.getFullYear(), month, 1).toLocaleString('default', { month: 'short' })\r\n            var year = date.getFullYear()\r\n            var monthYear = month + '-' + year\r\n            if (commentsTimeSeriesByMonth[monthYear]) {\r\n            commentsTimeSeriesByMonth[monthYear].Comments += comments.Comments\r\n            } else {\r\n            commentsTimeSeriesByMonth[monthYear] = {\r\n                Comments: comments.Comments,\r\n                'Date Posted': monthYear\r\n            }\r\n            }\r\n        }   \r\n        )\r\n\r\n        commentsTimeSeries = Object.values(commentsTimeSeriesByMonth)\r\n    }\r\n    setCommentsTimeSeries(commentsTimeSeries)\r\n\r\n\r\n\r\n  }, [analyticsData])\r\n  //console.log({ commentsTimeSeries })\r\n  const chartData = {\r\n\r\n    series: [{\r\n      name: \"Comments\",\r\n      data: commentsTimeSeries?.map((comments) => (comments?.Comments?.toFixed(0))),\r\n      //color \r\n      color: color\r\n    }],\r\n    options: {\r\n      chart: {\r\n        type: 'area',\r\n        height: 350,\r\n        zoom: {\r\n          enabled: true\r\n        },\r\n        toolbar: {\r\n          show: false\r\n        }\r\n\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        curve: 'smooth',\r\n        width: 3,\r\n        //change color \r\n      },\r\n      colors: [color],\r\n      fill: {\r\n        type: \"gradient\",\r\n        gradient: {\r\n\r\n          shadeIntensity: 1,\r\n          opacityFrom: 0.9,\r\n          opacityTo: 0.4,\r\n          stops: [0, 80, 100]\r\n        }\r\n      },\r\n\r\n      labels: commentsTimeSeries?.map((comments) => (comments?.['Date Posted'])),\r\n      xaxis: {\r\n        //   type: 'datetime',\r\n        labels: {\r\n          show: false,\r\n        },\r\n      },\r\n      yaxis: {\r\n        opposite: true,\r\n        labels: {\r\n          show: false,\r\n          formatter: function (val) {\r\n            return ShortenNumber(val) + ' Comments ';\r\n          }\r\n        },\r\n      },\r\n      grid: {\r\n        //  borderColor: borderColor,                \r\n\r\n        strokeDashArray: 4,\r\n        //hide horizontal grid lines\r\n        yaxis: {\r\n          lines: {\r\n            show: false\r\n          }\r\n        },\r\n      },\r\n      legend: {\r\n        horizontalAlign: 'left'\r\n      }\r\n    },\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"block py-6 pb-0 rounded-xl shadow-sm bg-white  my-8\" style={{ width: '90%', maxWidth: '300px',height:'fit-content', borderLeft: 'solid 4px '+color, borderTopLeftRadius: '0px', borderBottomLeftRadius: '0px' }}>\r\n      <p className=\"text-3xl font-semibold text-slate-700 dark:text-navy-100 pl-6\" style={{ fontSize: '22px' }}>\r\n        {ShortenNumber(analyticsData?.totals?.total_comments)} <span style={{ color: color }}>Total Comments</span>\r\n      </p>\r\n      <div>\r\n\r\n        {commentsTimeSeries && <ReactApexChart options={chartData?.options} series={chartData?.series} type=\"area\" height={200} />}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TotalLikesChart","import React, { useState, useEffect } from 'react'\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport clsx from 'clsx';\r\nfunction PostingFrequencyAverageChart({ analyticsData }) {\r\n\r\n    const GetAverageOfAllWeeks = (videosTimeseriesByWeekInRange) => {\r\n\r\n        var AverageWeek = [\r\n            { Day: 'Monday', AverageNumberOfVideos: 0 },\r\n            { Day: 'Tuesday', AverageNumberOfVideos: 0 },\r\n            { Day: 'Wednesday', AverageNumberOfVideos: 0 },\r\n            { Day: 'Thursday', AverageNumberOfVideos: 0 },\r\n            { Day: 'Friday', AverageNumberOfVideos: 0 },\r\n            { Day: 'Saturday', AverageNumberOfVideos: 0 },\r\n            { Day: 'Sunday', AverageNumberOfVideos: 0 },\r\n\r\n        ]\r\n\r\n        videosTimeseriesByWeekInRange.forEach((week) => {\r\n            week.forEach((day, j) => {\r\n                AverageWeek[j].AverageNumberOfVideos += day.Videos\r\n            })\r\n        }\r\n        )\r\n\r\n        AverageWeek.forEach((day, i) => {\r\n            day.AverageNumberOfVideos = day.AverageNumberOfVideos / videosTimeseriesByWeekInRange.length\r\n        })\r\n\r\n        return AverageWeek\r\n\r\n    }\r\n\r\n\r\n\r\n    const [numberOfWeeks, setNumberOfWeeks] = useState(3)\r\n    const [averageWeek, setAverageWeek] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        if (!analyticsData) return\r\n\r\n        var videosTimeseriesByWeekInRange;\r\n        if (numberOfWeeks == 0) videosTimeseriesByWeekInRange = analyticsData.videos_timeseries_by_week\r\n        else videosTimeseriesByWeekInRange = analyticsData.videos_timeseries_by_week.slice(-numberOfWeeks)\r\n\r\n        var average = GetAverageOfAllWeeks(videosTimeseriesByWeekInRange)\r\n        setAverageWeek(average)\r\n    }, [numberOfWeeks, analyticsData])\r\n\r\n\r\n\r\n\r\n\r\n    const [chartData, setChartData] = useState(null)\r\n    console.log({ averageWeek })\r\n\r\n    useEffect(() => {\r\n        if (!averageWeek?.length) return\r\n\r\n        var highestValue = Math.max(...averageWeek.map(({ AverageNumberOfVideos }) => AverageNumberOfVideos))\r\n\r\n        setChartData({\r\n\r\n            series: [\r\n                {\r\n                    name: 'Monday',\r\n                    data: [{\r\n                        x: 'Average Week',\r\n                        y: averageWeek?.[0]?.AverageNumberOfVideos\r\n                    }]\r\n\r\n                },\r\n                {\r\n                    name: 'Tuesday',\r\n                    data: [{\r\n                        x: 'Average Week',\r\n                        y: averageWeek?.[1]?.AverageNumberOfVideos\r\n                    }]\r\n                },\r\n                {\r\n                    name: 'Wednesday',\r\n                    data: [{\r\n                        x: 'Average Week',\r\n                        y: averageWeek?.[2]?.AverageNumberOfVideos\r\n                    }]\r\n                },\r\n                {\r\n                    name: 'Thursday',\r\n                    data: [{\r\n                        x: 'Average Week',\r\n                        y: averageWeek?.[3]?.AverageNumberOfVideos\r\n                    }]\r\n                },\r\n                {\r\n                    name: 'Friday',\r\n                    data: [{\r\n                        x: 'Average Week',\r\n                        y: averageWeek?.[4]?.AverageNumberOfVideos\r\n                    }]\r\n                },\r\n                {\r\n                    name: 'Saturday',\r\n                    data: [{\r\n                        x: 'Average Week',\r\n                        y: averageWeek?.[5]?.AverageNumberOfVideos\r\n                    }]\r\n                },\r\n                {\r\n                    name: 'Sunday',\r\n                    data: [{\r\n                        x: 'Average Week',\r\n                        y: averageWeek?.[6]?.AverageNumberOfVideos\r\n                    }]\r\n                },\r\n\r\n\r\n\r\n\r\n            ],\r\n            options: {\r\n                chart: {\r\n                    height: 350,\r\n                    type: 'heatmap',\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                colors: [\"#008FFB\"],\r\n                xaxis: {\r\n                    labels: {\r\n                        show: false\r\n                    }\r\n                },\r\n                tooltip: {\r\n\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return ((val >= 1) ? val : val?.toFixed(1)) + ((val == 1) ? \" Video\" : \" Videos\")\r\n                        }\r\n                    }\r\n                },\r\n\r\n                plotOptions: {\r\n                    heatmap: {\r\n                        colorScale: {\r\n                            ranges: [\r\n                                {\r\n                                    from: 0,\r\n                                    to: 0,\r\n                                    color: '#d3dbf6',\r\n                                    name: 'None',\r\n                                },\r\n                                {\r\n                                    from: 0.1,\r\n                                    to: (40 * highestValue / 100),\r\n                                    color: '#67b7dc',\r\n                                    name: 'Lowest',\r\n                                },\r\n                                {\r\n                                    from: (40 * highestValue / 100),\r\n                                    to: (70 * highestValue / 100),\r\n                                    color: '#6771dc',\r\n                                    name: 'Low',\r\n                                },\r\n                                {\r\n                                    from: (70 * highestValue / 100),\r\n                                    to: (90 * highestValue / 100),\r\n                                    color: '#a367dc',\r\n                                    name: 'High',\r\n                                },\r\n                                {\r\n                                    from: (90 * highestValue / 100),\r\n                                    to: highestValue,\r\n                                    color: '#E620A0',\r\n                                    name: 'Highest',\r\n                                },\r\n\r\n                            ]\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        )\r\n    }, [averageWeek, numberOfWeeks])\r\n\r\n    const ranges = [\r\n        { name: 'Last Week', id: 0, numberOfWeeks: 1 },\r\n        { name: 'Last Month', id: 1, numberOfWeeks: 4 },\r\n        { name: 'Last 6 Months', id: 2, numberOfWeeks: 24 },\r\n        { name: 'Last Year', id: 3, numberOfWeeks: 52 },\r\n        { name: 'All Time', id: 5, numberOfWeeks: 0 }]\r\n\r\n\r\n    const [selectedRange, setSelectedRange] = useState(5)\r\n\r\n    const HandleChangingRange = (range) => {\r\n        setSelectedRange(range.id)\r\n\r\n        setNumberOfWeeks(range.numberOfWeeks)\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div id=\"chart\" className='block py-6 pb-0 rounded-xl shadow-sm bg-white mx-auto my-8' style={{ width: '90%', maxWidth: '1600px', margin: 'auto', marginBlock: '64px' }}>\r\n            <h1 className='text-2xl font-medium text-slate-500 p-6'>Most Posted on Days on Average </h1>\r\n\r\n            <div className=\"flex items-center px-6 mb-12\">\r\n                <div className=\"inline-flex shadow-md hover:shadow-lg focus:shadow-lg\" role=\"group\">\r\n                    {ranges.map((range, i) => (\r\n                        <a\r\n                            onClick={() => HandleChangingRange(range)}\r\n                            className={clsx(i == 0 && \"rounded-l \", i == ranges.length && \"rounded-r\", \" px-6 py-1 cursor-pointer bg-slate-500 text-white  text-xs leading-tight uppercase hover:bg-slate-600 focus:bg-slate-600 focus:outline-none focus:ring-0 active:bg-slate-700 transition duration-150 ease-in-out\", selectedRange == range.id && \"bg-slate-800\")}\r\n                        >\r\n                            {range.name}\r\n                        </a>\r\n                    ))}\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div className='px-8'>\r\n                {(analyticsData && chartData) && <ReactApexChart options={chartData?.options} series={chartData?.series} type=\"heatmap\" height={350} />}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostingFrequencyAverageChart","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\nimport AccountGrowthChart from '../components/AccountGrowthChart'\r\nimport TopDurations from '../components/TopDurations'\r\nimport PostingFrequencyChart from '../components/PostingFrequencyChart';\r\nimport MostUsedHashtags from '../components/MostUsedHashtags';\r\nimport UserOverview from '../components/UserOverview';\r\nimport TotalViewsChart from '../components/TotalViewsChart';\r\nimport TotalLikesChart from '../components/TotalLikesChart';\r\nimport TotalSharesChart from '../components/TotalSharesChart';\r\nimport TotalCommentsChart from '../components/TotalCommentsChart';\r\nimport PostingFrequencyAverageChart from '../components/PostingFrequencyAverageChart';\r\n\r\nfunction StatsPage() {\r\n    const { id } = useParams();\r\n\r\n    const [analyticsData, setAnalyticsData] = useState(null)\r\n\r\n    const GetAnalyticsData = async () => {\r\n        try {\r\n            const response = await fetch(`${global.HOST}/api/profile/${id}`)\r\n            const data = await response.json()\r\n            setAnalyticsData(data)\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        if (!id) return\r\n        GetAnalyticsData()\r\n    }, [id])\r\n\r\n    console.log({ analyticsData })\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"mixed-chart py-12 \">\r\n                <UserOverview analyticsData={analyticsData} />\r\n                <div className='flex flex-wrap m-auto justify-between\t ' style={{ width: '90%', maxWidth: '1700px',   }}>\r\n                    <TotalViewsChart analyticsData={analyticsData} color={\"#F1416C\"} />\r\n                    <TotalLikesChart analyticsData={analyticsData} color={\"#7239EA\"} />\r\n                    <TotalSharesChart analyticsData={analyticsData} color={\"#FFC700\"} />\r\n                    <TotalCommentsChart analyticsData={analyticsData} color={\"#50CD89\"} />\r\n                </div>\r\n                <AccountGrowthChart analyticsData={analyticsData} />\r\n                <PostingFrequencyChart analyticsData={analyticsData} />\r\n                <PostingFrequencyAverageChart analyticsData={analyticsData} />\r\n\r\n                <div className='flex flex-wrap' style={{ width: '90%', maxWidth: '1700px', margin: 'auto' }}>\r\n\r\n                    <MostUsedHashtags analyticsData={analyticsData} />\r\n                    <TopDurations analyticsData={analyticsData} />\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatsPage"],"names":["_ref","analyticsData","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","allTimeSeries","setAllTimeSeries","useEffect","_analyticsData$videos","videos_timeseries","length","allTimeSeriesByMonth","i","_analyticsData$views_","_analyticsData$likes_","_analyticsData$shares","_analyticsData$commen","_analyticsData$views_2","_analyticsData$likes_2","_analyticsData$shares2","_analyticsData$commen2","video","date","Date","month","getMonth","monthYear","getFullYear","toLocaleString","Videos","Views","views_timeseries","Likes","likes_timeseries","Shares","shares_timeseries","Comments","comments_timeseries","Object","values","_useState13","_useState14","chartData","setChartData","series","name","data","map","Number","options","chart","height","stacked","toolbar","show","colors","fill","gradient","dataLabels","enabled","stroke","curve","width","xaxis","categories","labels","yaxis","axisTicks","axisBorder","color","style","title","text","tooltip","seriesName","opposite","legend","horizontalAlign","offsetX","_jsxs","id","className","maxWidth","margin","marginBlock","children","_jsx","ReactApexChart","type","topDurations","setTopDurations","videoDurationData","video_duration_data","videoDurationDataArray","keys","key","value","sort","a","b","duration","_duration$value","toFixed","fontFamily","plotOptions","bar","borderRadius","horizontal","distributed","barHeight","position","textAnchor","offsetY","fontSize","fontWeight","align","formatter","val","opt","isInteger","parseInt","toString","grid","lines","padding","bottom","strokeDashArray","y","videosTimeseriesByWeekInRange","setVideosTimeseriesByWeekInRange","numberOfWeeks","setNumberOfWeeks","videos_timeseries_by_week","slice","console","log","highestValue","forEach","item","day","j","_item$","x","_item$2","_item$3","_item$4","_item$5","_item$6","_item$7","heatmap","colorScale","ranges","from","to","selectedRange","setSelectedRange","role","range","onClick","HandleChangingRange","clsx","mostUsedHashtags","setMostUsedHashtags","hashtags_data","overflowY","overflowX","hashtag","_hashtag$hashtag","marginRight","substring","left","count","minWidth","number","profileDetails","setProfileDetails","totals","setTotals","profile_details","src","global","HOST","username","alt","filter","borderBottom","bio","link_in_bio","marginInline","marginTop","followers","BsFillStarFill","transform","following","total_videos","RiClapperboardFill","_analyticsData$totals","ShortenNumber","viewsTimeSeries","setViewsTimeSeries","_viewsTimeSeries","viewsTimeSeriesByMonth","views","_views$Views","zoom","shadeIntensity","opacityFrom","opacityTo","stops","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","total_views","likesTimeSeries","setLikesTimeSeries","_likesTimeSeries","likesTimeSeriesByMonth","likes","_likes$Likes","total_likes","sharesTimeSeries","setSharesTimeSeries","_sharesTimeSeries","sharesTimeSeriesByMonth","shares","_shares$Shares","total_shares","commentsTimeSeries","setCommentsTimeSeries","_commentsTimeSeries","commentsTimeSeriesByMonth","comments","_comments$Comments","total_comments","averageWeek","setAverageWeek","average","AverageWeek","Day","AverageNumberOfVideos","week","GetAverageOfAllWeeks","_averageWeek$","_averageWeek$2","_averageWeek$3","_averageWeek$4","_averageWeek$5","_averageWeek$6","_averageWeek$7","Math","max","apply","_toConsumableArray","_ref2","useParams","setAnalyticsData","GetAnalyticsData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","fetch","concat","sent","json","t0","message","stop","arguments","UserOverview","TotalViewsChart","TotalLikesChart","TotalSharesChart","TotalCommentsChart","AccountGrowthChart","PostingFrequencyChart","PostingFrequencyAverageChart","MostUsedHashtags","TopDurations"],"sourceRoot":""}